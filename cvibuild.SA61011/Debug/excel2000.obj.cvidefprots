[Excel_GetProperty]
Class="Function"
Prototype="long Excel_GetProperty(CAObjHandle objectHandle, ERRORINFO *errorInfo, unsigned int propertyID, unsigned int propertyType, void *value);"

[Excel_SetProperty]
Class="Function"
Prototype="long Excel_SetProperty(CAObjHandle objectHandle, ERRORINFO *errorInfo, unsigned int propertyID, unsigned int propertyType, ...);"

[Excel_SetPropertyByRef]
Class="Function"
Prototype="long Excel_SetPropertyByRef(CAObjHandle objectHandle, ERRORINFO *errorInfo, unsigned int propertyID, unsigned int propertyType, ...);"

[Excel_NewQueryTable]
Class="Function"
Prototype="long Excel_NewQueryTable(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenQueryTable]
Class="Function"
Prototype="long Excel_OpenQueryTable(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveQueryTable]
Class="Function"
Prototype="long Excel_ActiveQueryTable(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_QueryTableCancelRefresh]
Class="Function"
Prototype="long Excel_QueryTableCancelRefresh(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_QueryTableDelete]
Class="Function"
Prototype="long Excel_QueryTableDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_QueryTableRefresh]
Class="Function"
Prototype="long Excel_QueryTableRefresh(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT backgroundQuery, short *returnValue);"

[Excel_QueryTableResetTimer]
Class="Function"
Prototype="long Excel_QueryTableResetTimer(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_NewApp]
Class="Function"
Prototype="long Excel_NewApp(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenApp]
Class="Function"
Prototype="long Excel_OpenApp(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveApp]
Class="Function"
Prototype="long Excel_ActiveApp(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_AppCalculate]
Class="Function"
Prototype="long Excel_AppCalculate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDDEExecute]
Class="Function"
Prototype="long Excel_AppDDEExecute(CAObjHandle objectHandle, ERRORINFO *errorInfo, long channel, const char *string);"

[Excel_AppDDEInitiate]
Class="Function"
Prototype="long Excel_AppDDEInitiate(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *app, const char *topic, long *returnValue);"

[Excel_AppDDEPoke]
Class="Function"
Prototype="long Excel_AppDDEPoke(CAObjHandle objectHandle, ERRORINFO *errorInfo, long channel, struct tagVARIANT item, struct tagVARIANT data);"

[Excel_AppDDERequest]
Class="Function"
Prototype="long Excel_AppDDERequest(CAObjHandle objectHandle, ERRORINFO *errorInfo, long channel, const char *item, struct tagVARIANT *returnValue);"

[Excel_AppDDETerminate]
Class="Function"
Prototype="long Excel_AppDDETerminate(CAObjHandle objectHandle, ERRORINFO *errorInfo, long channel);"

[Excel_AppEvaluate]
Class="Function"
Prototype="long Excel_AppEvaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_App_Evaluate]
Class="Function"
Prototype="long Excel_App_Evaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_AppExecuteExcel4Macro]
Class="Function"
Prototype="long Excel_AppExecuteExcel4Macro(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *string, struct tagVARIANT *returnValue);"

[Excel_AppIntersect]
Class="Function"
Prototype="long Excel_AppIntersect(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, CAObjHandle arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, CAObjHandle *returnValue);"

[Excel_AppRange]
Class="Function"
Prototype="long Excel_AppRange(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT cell1, struct tagVARIANT cell2, CAObjHandle *returnValue);"

[Excel_AppRun]
Class="Function"
Prototype="long Excel_AppRun(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT macro, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_App_Run2]
Class="Function"
Prototype="long Excel_App_Run2(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT macro, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_AppSendKeys]
Class="Function"
Prototype="long Excel_AppSendKeys(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT keys, struct tagVARIANT wait);"

[Excel_AppShortcutMenus]
Class="Function"
Prototype="long Excel_AppShortcutMenus(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_AppUnion]
Class="Function"
Prototype="long Excel_AppUnion(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, CAObjHandle arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, CAObjHandle *returnValue);"

[Excel_AppActivateMicrosoftApp]
Class="Function"
Prototype="long Excel_AppActivateMicrosoftApp(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlMSApplication index);"

[Excel_AppAddChartAutoFormat]
Class="Function"
Prototype="long Excel_AppAddChartAutoFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT chart, const char *name, struct tagVARIANT description);"

[Excel_AppAddCustomList]
Class="Function"
Prototype="long Excel_AppAddCustomList(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT listArray, struct tagVARIANT byRow);"

[Excel_AppCaller]
Class="Function"
Prototype="long Excel_AppCaller(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_AppCentimetersToPoints]
Class="Function"
Prototype="long Excel_AppCentimetersToPoints(CAObjHandle objectHandle, ERRORINFO *errorInfo, double centimeters, double *returnValue);"

[Excel_AppCheckSpelling]
Class="Function"
Prototype="long Excel_AppCheckSpelling(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *word, struct tagVARIANT customDictionary, struct tagVARIANT ignoreUppercase, short *returnValue);"

[Excel_AppClipboardFormats]
Class="Function"
Prototype="long Excel_AppClipboardFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_AppConvertFormula]
Class="Function"
Prototype="long Excel_AppConvertFormula(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT formula, enum ExcelEnum_XlReferenceStyle fromReferenceStyle, struct tagVARIANT toReferenceStyle, struct tagVARIANT toAbsolute, struct tagVARIANT relativeTo, struct tagVARIANT *returnValue);"

[Excel_AppDummy1]
Class="Function"
Prototype="long Excel_AppDummy1(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy2]
Class="Function"
Prototype="long Excel_AppDummy2(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy3]
Class="Function"
Prototype="long Excel_AppDummy3(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy4]
Class="Function"
Prototype="long Excel_AppDummy4(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy5]
Class="Function"
Prototype="long Excel_AppDummy5(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy6]
Class="Function"
Prototype="long Excel_AppDummy6(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy7]
Class="Function"
Prototype="long Excel_AppDummy7(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy8]
Class="Function"
Prototype="long Excel_AppDummy8(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy9]
Class="Function"
Prototype="long Excel_AppDummy9(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy10]
Class="Function"
Prototype="long Excel_AppDummy10(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDummy11]
Class="Function"
Prototype="long Excel_AppDummy11(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppDeleteChartAutoFormat]
Class="Function"
Prototype="long Excel_AppDeleteChartAutoFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name);"

[Excel_AppDeleteCustomList]
Class="Function"
Prototype="long Excel_AppDeleteCustomList(CAObjHandle objectHandle, ERRORINFO *errorInfo, long listNum);"

[Excel_AppDoubleClick]
Class="Function"
Prototype="long Excel_AppDoubleClick(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppFileConverters]
Class="Function"
Prototype="long Excel_AppFileConverters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index1, struct tagVARIANT index2, struct tagVARIANT *returnValue);"

[Excel_App_FindFile]
Class="Function"
Prototype="long Excel_App_FindFile(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppGetCustomListContents]
Class="Function"
Prototype="long Excel_AppGetCustomListContents(CAObjHandle objectHandle, ERRORINFO *errorInfo, long listNum, struct tagVARIANT *returnValue);"

[Excel_AppGetCustomListNum]
Class="Function"
Prototype="long Excel_AppGetCustomListNum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT listArray, long *returnValue);"

[Excel_AppGetOpenFilename]
Class="Function"
Prototype="long Excel_AppGetOpenFilename(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT fileFilter, struct tagVARIANT filterIndex, struct tagVARIANT title, struct tagVARIANT buttonText, struct tagVARIANT multiSelect, struct tagVARIANT *returnValue);"

[Excel_AppGetSaveAsFilename]
Class="Function"
Prototype="long Excel_AppGetSaveAsFilename(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT initialFilename, struct tagVARIANT fileFilter, struct tagVARIANT filterIndex, struct tagVARIANT title, struct tagVARIANT buttonText, struct tagVARIANT *returnValue);"

[Excel_AppGoto]
Class="Function"
Prototype="long Excel_AppGoto(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT reference, struct tagVARIANT scroll);"

[Excel_AppHelp]
Class="Function"
Prototype="long Excel_AppHelp(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT helpFile, struct tagVARIANT helpContextID);"

[Excel_AppInchesToPoints]
Class="Function"
Prototype="long Excel_AppInchesToPoints(CAObjHandle objectHandle, ERRORINFO *errorInfo, double inches, double *returnValue);"

[Excel_AppInputBox]
Class="Function"
Prototype="long Excel_AppInputBox(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *prompt, struct tagVARIANT title, struct tagVARIANT _default, struct tagVARIANT left, struct tagVARIANT top, struct tagVARIANT helpFile, struct tagVARIANT helpContextID, struct tagVARIANT type, struct tagVARIANT *returnValue);"

[Excel_AppInternational]
Class="Function"
Prototype="long Excel_AppInternational(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_AppMacroOptions]
Class="Function"
Prototype="long Excel_AppMacroOptions(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT macro, struct tagVARIANT description, struct tagVARIANT hasMenu, struct tagVARIANT menuText, struct tagVARIANT hasShortcutKey, struct tagVARIANT shortcutKey, struct tagVARIANT category, struct tagVARIANT statusBar, struct tagVARIANT helpContextID, struct tagVARIANT helpFile);"

[Excel_AppMailLogoff]
Class="Function"
Prototype="long Excel_AppMailLogoff(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppMailLogon]
Class="Function"
Prototype="long Excel_AppMailLogon(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT password, struct tagVARIANT downloadNewMail);"

[Excel_AppNextLetter]
Class="Function"
Prototype="long Excel_AppNextLetter(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_AppOnKey]
Class="Function"
Prototype="long Excel_AppOnKey(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *key, struct tagVARIANT procedure);"

[Excel_AppOnRepeat]
Class="Function"
Prototype="long Excel_AppOnRepeat(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *text, const char *procedure);"

[Excel_AppOnTime]
Class="Function"
Prototype="long Excel_AppOnTime(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT earliestTime, const char *procedure, struct tagVARIANT latestTime, struct tagVARIANT schedule);"

[Excel_AppOnUndo]
Class="Function"
Prototype="long Excel_AppOnUndo(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *text, const char *procedure);"

[Excel_AppPreviousSelections]
Class="Function"
Prototype="long Excel_AppPreviousSelections(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_AppQuit]
Class="Function"
Prototype="long Excel_AppQuit(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppRecordMacro]
Class="Function"
Prototype="long Excel_AppRecordMacro(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT basicCode, struct tagVARIANT xlmCode);"

[Excel_AppRegisteredFunctions]
Class="Function"
Prototype="long Excel_AppRegisteredFunctions(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index1, struct tagVARIANT index2, struct tagVARIANT *returnValue);"

[Excel_AppRegisterXLL]
Class="Function"
Prototype="long Excel_AppRegisterXLL(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, short *returnValue);"

[Excel_AppRepeat]
Class="Function"
Prototype="long Excel_AppRepeat(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppResetTipWizard]
Class="Function"
Prototype="long Excel_AppResetTipWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppSave]
Class="Function"
Prototype="long Excel_AppSave(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename);"

[Excel_AppSaveWorkspace]
Class="Function"
Prototype="long Excel_AppSaveWorkspace(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename);"

[Excel_AppSetDefaultChart]
Class="Function"
Prototype="long Excel_AppSetDefaultChart(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT formatName, struct tagVARIANT gallery);"

[Excel_AppUndo]
Class="Function"
Prototype="long Excel_AppUndo(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppVolatile]
Class="Function"
Prototype="long Excel_AppVolatile(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT _volatile);"

[Excel_App_Wait]
Class="Function"
Prototype="long Excel_App_Wait(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT time);"

[Excel_App_WSFunction]
Class="Function"
Prototype="long Excel_App_WSFunction(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_AppWait]
Class="Function"
Prototype="long Excel_AppWait(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT time, short *returnValue);"

[Excel_AppGetPhonetic]
Class="Function"
Prototype="long Excel_AppGetPhonetic(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT text, char **returnValue);"

[Excel_AppDummy12]
Class="Function"
Prototype="long Excel_AppDummy12(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppCalculateFull]
Class="Function"
Prototype="long Excel_AppCalculateFull(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_AppFindFile]
Class="Function"
Prototype="long Excel_AppFindFile(CAObjHandle objectHandle, ERRORINFO *errorInfo, short *returnValue);"

[Excel_NewChart]
Class="Function"
Prototype="long Excel_NewChart(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenChart]
Class="Function"
Prototype="long Excel_OpenChart(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveChart]
Class="Function"
Prototype="long Excel_ActiveChart(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ChartActivate]
Class="Function"
Prototype="long Excel_ChartActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartCopy]
Class="Function"
Prototype="long Excel_ChartCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_ChartDelete]
Class="Function"
Prototype="long Excel_ChartDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartMove]
Class="Function"
Prototype="long Excel_ChartMove(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_Chart_PrintOut]
Class="Function"
Prototype="long Excel_Chart_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_ChartPrintPreview]
Class="Function"
Prototype="long Excel_ChartPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_ChartProtect]
Class="Function"
Prototype="long Excel_ChartProtect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password, struct tagVARIANT drawingObjects, struct tagVARIANT contents, struct tagVARIANT scenarios, struct tagVARIANT userInterfaceOnly);"

[Excel_Chart_Dummy23]
Class="Function"
Prototype="long Excel_Chart_Dummy23(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartSaveAs]
Class="Function"
Prototype="long Excel_ChartSaveAs(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT fileFormat, struct tagVARIANT password, struct tagVARIANT writeResPassword, struct tagVARIANT readOnlyRecommended, struct tagVARIANT createBackup, struct tagVARIANT addToMru, struct tagVARIANT textCodepage, struct tagVARIANT textVisualLayout);"

[Excel_ChartSelect]
Class="Function"
Prototype="long Excel_ChartSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_ChartUnprotect]
Class="Function"
Prototype="long Excel_ChartUnprotect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password);"

[Excel_ChartApplyDataLabels]
Class="Function"
Prototype="long Excel_ChartApplyDataLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDataLabelsType type, struct tagVARIANT legendKey, struct tagVARIANT autoText, struct tagVARIANT hasLeaderLines);"

[Excel_ChartArcs]
Class="Function"
Prototype="long Excel_ChartArcs(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartAreaGroups]
Class="Function"
Prototype="long Excel_ChartAreaGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartAutoFormat]
Class="Function"
Prototype="long Excel_ChartAutoFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, long gallery, struct tagVARIANT format);"

[Excel_ChartAxes]
Class="Function"
Prototype="long Excel_ChartAxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT type, enum ExcelEnum_XlAxisGroup axisGroup, CAObjHandle *returnValue);"

[Excel_ChartSetBackgroundPicture]
Class="Function"
Prototype="long Excel_ChartSetBackgroundPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename);"

[Excel_ChartBarGroups]
Class="Function"
Prototype="long Excel_ChartBarGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartButtons]
Class="Function"
Prototype="long Excel_ChartButtons(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartChartGroups]
Class="Function"
Prototype="long Excel_ChartChartGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartChartObjects]
Class="Function"
Prototype="long Excel_ChartChartObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartChartWizard]
Class="Function"
Prototype="long Excel_ChartChartWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT source, struct tagVARIANT gallery, struct tagVARIANT format, struct tagVARIANT plotBy, struct tagVARIANT categoryLabels, struct tagVARIANT seriesLabels, struct tagVARIANT hasLegend, struct tagVARIANT title, struct tagVARIANT categoryTitle, struct tagVARIANT valueTitle, struct tagVARIANT extraTitle);"

[Excel_ChartCheckBoxes]
Class="Function"
Prototype="long Excel_ChartCheckBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartCheckSpelling]
Class="Function"
Prototype="long Excel_ChartCheckSpelling(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT customDictionary, struct tagVARIANT ignoreUppercase, struct tagVARIANT alwaysSuggest, struct tagVARIANT spellLang);"

[Excel_ChartColumnGroups]
Class="Function"
Prototype="long Excel_ChartColumnGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartCopyPicture]
Class="Function"
Prototype="long Excel_ChartCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, enum ExcelEnum_XlPictureAppearance size);"

[Excel_ChartCreatePublisher]
Class="Function"
Prototype="long Excel_ChartCreatePublisher(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT edition, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlPictureAppearance size, struct tagVARIANT containsPICT, struct tagVARIANT containsBIFF, struct tagVARIANT containsRTF, struct tagVARIANT containsVALU);"

[Excel_ChartDeselect]
Class="Function"
Prototype="long Excel_ChartDeselect(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartDoughnutGroups]
Class="Function"
Prototype="long Excel_ChartDoughnutGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartDrawings]
Class="Function"
Prototype="long Excel_ChartDrawings(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartDrawingObjects]
Class="Function"
Prototype="long Excel_ChartDrawingObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartDropDowns]
Class="Function"
Prototype="long Excel_ChartDropDowns(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartEvaluate]
Class="Function"
Prototype="long Excel_ChartEvaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_Chart_Evaluate]
Class="Function"
Prototype="long Excel_Chart_Evaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_ChartGroupBoxes]
Class="Function"
Prototype="long Excel_ChartGroupBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartGroupObjects]
Class="Function"
Prototype="long Excel_ChartGroupObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartGetHasAxis]
Class="Function"
Prototype="long Excel_ChartGetHasAxis(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index1, struct tagVARIANT index2, struct tagVARIANT *returnValue);"

[Excel_ChartSetHasAxis]
Class="Function"
Prototype="long Excel_ChartSetHasAxis(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index1, struct tagVARIANT index2, struct tagVARIANT newValue);"

[Excel_ChartLabels]
Class="Function"
Prototype="long Excel_ChartLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartLineGroups]
Class="Function"
Prototype="long Excel_ChartLineGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartLines]
Class="Function"
Prototype="long Excel_ChartLines(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartListBoxes]
Class="Function"
Prototype="long Excel_ChartListBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartLocation]
Class="Function"
Prototype="long Excel_ChartLocation(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlChartLocation where, struct tagVARIANT name, CAObjHandle *returnValue);"

[Excel_ChartOLEObjects]
Class="Function"
Prototype="long Excel_ChartOLEObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartOptionButtons]
Class="Function"
Prototype="long Excel_ChartOptionButtons(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartOvals]
Class="Function"
Prototype="long Excel_ChartOvals(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartPaste]
Class="Function"
Prototype="long Excel_ChartPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT type);"

[Excel_ChartPictures]
Class="Function"
Prototype="long Excel_ChartPictures(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartPieGroups]
Class="Function"
Prototype="long Excel_ChartPieGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartRadarGroups]
Class="Function"
Prototype="long Excel_ChartRadarGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartRectangles]
Class="Function"
Prototype="long Excel_ChartRectangles(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartScrollBars]
Class="Function"
Prototype="long Excel_ChartScrollBars(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartSeriesCollection]
Class="Function"
Prototype="long Excel_ChartSeriesCollection(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartSpinners]
Class="Function"
Prototype="long Excel_ChartSpinners(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartTextBoxes]
Class="Function"
Prototype="long Excel_ChartTextBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartApplyCustomType]
Class="Function"
Prototype="long Excel_ChartApplyCustomType(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlChartType chartType, struct tagVARIANT typeName);"

[Excel_ChartXYGroups]
Class="Function"
Prototype="long Excel_ChartXYGroups(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartCopyChartBuild]
Class="Function"
Prototype="long Excel_ChartCopyChartBuild(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartGetChartElement]
Class="Function"
Prototype="long Excel_ChartGetChartElement(CAObjHandle objectHandle, ERRORINFO *errorInfo, long x, long y, long *elementID, long *arg1, long *arg2);"

[Excel_ChartSetSourceData]
Class="Function"
Prototype="long Excel_ChartSetSourceData(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle source, struct tagVARIANT plotBy);"

[Excel_ChartExport]
Class="Function"
Prototype="long Excel_ChartExport(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT filterName, struct tagVARIANT interactive, short *returnValue);"

[Excel_ChartRefresh]
Class="Function"
Prototype="long Excel_ChartRefresh(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartPrintOut]
Class="Function"
Prototype="long Excel_ChartPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_NewWorksheet]
Class="Function"
Prototype="long Excel_NewWorksheet(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenWorksheet]
Class="Function"
Prototype="long Excel_OpenWorksheet(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveWorksheet]
Class="Function"
Prototype="long Excel_ActiveWorksheet(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_WorksheetActivate]
Class="Function"
Prototype="long Excel_WorksheetActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetCopy]
Class="Function"
Prototype="long Excel_WorksheetCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_WorksheetDelete]
Class="Function"
Prototype="long Excel_WorksheetDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetMove]
Class="Function"
Prototype="long Excel_WorksheetMove(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_Worksheet_PrintOut]
Class="Function"
Prototype="long Excel_Worksheet_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_WorksheetPrintPreview]
Class="Function"
Prototype="long Excel_WorksheetPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_WorksheetProtect]
Class="Function"
Prototype="long Excel_WorksheetProtect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password, struct tagVARIANT drawingObjects, struct tagVARIANT contents, struct tagVARIANT scenarios, struct tagVARIANT userInterfaceOnly);"

[Excel_WorksheetSaveAs]
Class="Function"
Prototype="long Excel_WorksheetSaveAs(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT fileFormat, struct tagVARIANT password, struct tagVARIANT writeResPassword, struct tagVARIANT readOnlyRecommended, struct tagVARIANT createBackup, struct tagVARIANT addToMru, struct tagVARIANT textCodepage, struct tagVARIANT textVisualLayout);"

[Excel_WorksheetSelect]
Class="Function"
Prototype="long Excel_WorksheetSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_WorksheetUnprotect]
Class="Function"
Prototype="long Excel_WorksheetUnprotect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password);"

[Excel_WorksheetArcs]
Class="Function"
Prototype="long Excel_WorksheetArcs(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetSetBackgroundPicture]
Class="Function"
Prototype="long Excel_WorksheetSetBackgroundPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename);"

[Excel_WorksheetButtons]
Class="Function"
Prototype="long Excel_WorksheetButtons(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetCalculate]
Class="Function"
Prototype="long Excel_WorksheetCalculate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetChartObjects]
Class="Function"
Prototype="long Excel_WorksheetChartObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetCheckBoxes]
Class="Function"
Prototype="long Excel_WorksheetCheckBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetCheckSpelling]
Class="Function"
Prototype="long Excel_WorksheetCheckSpelling(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT customDictionary, struct tagVARIANT ignoreUppercase, struct tagVARIANT alwaysSuggest, struct tagVARIANT spellLang);"

[Excel_WorksheetClearArrows]
Class="Function"
Prototype="long Excel_WorksheetClearArrows(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetDrawings]
Class="Function"
Prototype="long Excel_WorksheetDrawings(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetDrawingObjects]
Class="Function"
Prototype="long Excel_WorksheetDrawingObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetDropDowns]
Class="Function"
Prototype="long Excel_WorksheetDropDowns(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetEvaluate]
Class="Function"
Prototype="long Excel_WorksheetEvaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_Worksheet_Evaluate]
Class="Function"
Prototype="long Excel_Worksheet_Evaluate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT *returnValue);"

[Excel_WorksheetResetAllPageBreaks]
Class="Function"
Prototype="long Excel_WorksheetResetAllPageBreaks(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetGroupBoxes]
Class="Function"
Prototype="long Excel_WorksheetGroupBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetGroupObjects]
Class="Function"
Prototype="long Excel_WorksheetGroupObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetLabels]
Class="Function"
Prototype="long Excel_WorksheetLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetLines]
Class="Function"
Prototype="long Excel_WorksheetLines(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetListBoxes]
Class="Function"
Prototype="long Excel_WorksheetListBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetOLEObjects]
Class="Function"
Prototype="long Excel_WorksheetOLEObjects(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetOptionButtons]
Class="Function"
Prototype="long Excel_WorksheetOptionButtons(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetOvals]
Class="Function"
Prototype="long Excel_WorksheetOvals(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetPaste]
Class="Function"
Prototype="long Excel_WorksheetPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT destination, struct tagVARIANT link);"

[Excel_WorksheetPasteSpecial]
Class="Function"
Prototype="long Excel_WorksheetPasteSpecial(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT format, struct tagVARIANT link, struct tagVARIANT displayAsIcon, struct tagVARIANT iconFileName, struct tagVARIANT iconIndex, struct tagVARIANT iconLabel);"

[Excel_WorksheetPictures]
Class="Function"
Prototype="long Excel_WorksheetPictures(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetPivotTables]
Class="Function"
Prototype="long Excel_WorksheetPivotTables(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetPivotTableWizard]
Class="Function"
Prototype="long Excel_WorksheetPivotTableWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sourceType, struct tagVARIANT sourceData, struct tagVARIANT tableDestination, struct tagVARIANT tableName, struct tagVARIANT rowGrand, struct tagVARIANT columnGrand, struct tagVARIANT saveData, struct tagVARIANT hasAutoFormat, struct tagVARIANT autoPage, struct tagVARIANT reserved, struct tagVARIANT backgroundQuery, struct tagVARIANT optimizeCache, struct tagVARIANT pageFieldOrder, struct tagVARIANT pageFieldWrapCount, struct tagVARIANT readData, struct tagVARIANT connection, CAObjHandle *returnValue);"

[Excel_WorksheetRange]
Class="Function"
Prototype="long Excel_WorksheetRange(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT cell1, struct tagVARIANT cell2, CAObjHandle *returnValue);"

[Excel_WorksheetRectangles]
Class="Function"
Prototype="long Excel_WorksheetRectangles(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetScenarios]
Class="Function"
Prototype="long Excel_WorksheetScenarios(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetScrollBars]
Class="Function"
Prototype="long Excel_WorksheetScrollBars(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetShowAllData]
Class="Function"
Prototype="long Excel_WorksheetShowAllData(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetShowDataForm]
Class="Function"
Prototype="long Excel_WorksheetShowDataForm(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetSpinners]
Class="Function"
Prototype="long Excel_WorksheetSpinners(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetTextBoxes]
Class="Function"
Prototype="long Excel_WorksheetTextBoxes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetClearCircles]
Class="Function"
Prototype="long Excel_WorksheetClearCircles(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetCircleInvalid]
Class="Function"
Prototype="long Excel_WorksheetCircleInvalid(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetPrintOut]
Class="Function"
Prototype="long Excel_WorksheetPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_Worksheet_CheckSpelling]
Class="Function"
Prototype="long Excel_Worksheet_CheckSpelling(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT customDictionary, struct tagVARIANT ignoreUppercase, struct tagVARIANT alwaysSuggest, struct tagVARIANT spellLang, struct tagVARIANT ignoreFinalYaa, struct tagVARIANT spellScript);"

[Excel_NewWorkbook]
Class="Function"
Prototype="long Excel_NewWorkbook(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenWorkbook]
Class="Function"
Prototype="long Excel_OpenWorkbook(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveWorkbook]
Class="Function"
Prototype="long Excel_ActiveWorkbook(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_WorkbookActivate]
Class="Function"
Prototype="long Excel_WorkbookActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookChangeFileAccess]
Class="Function"
Prototype="long Excel_WorkbookChangeFileAccess(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlFileAccess mode, struct tagVARIANT writePassword, struct tagVARIANT notify);"

[Excel_WorkbookChangeLink]
Class="Function"
Prototype="long Excel_WorkbookChangeLink(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, const char *newName, enum ExcelEnum_XlLinkType type);"

[Excel_WorkbookClose]
Class="Function"
Prototype="long Excel_WorkbookClose(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT saveChanges, struct tagVARIANT filename, struct tagVARIANT routeWorkbook);"

[Excel_WorkbookGetColors]
Class="Function"
Prototype="long Excel_WorkbookGetColors(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_WorkbookSetColors]
Class="Function"
Prototype="long Excel_WorkbookSetColors(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT newValue);"

[Excel_WorkbookDeleteNumberFormat]
Class="Function"
Prototype="long Excel_WorkbookDeleteNumberFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *numberFormat);"

[Excel_WorkbookExclusiveAccess]
Class="Function"
Prototype="long Excel_WorkbookExclusiveAccess(CAObjHandle objectHandle, ERRORINFO *errorInfo, short *returnValue);"

[Excel_WorkbookForwardMailer]
Class="Function"
Prototype="long Excel_WorkbookForwardMailer(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookLinkInfo]
Class="Function"
Prototype="long Excel_WorkbookLinkInfo(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, enum ExcelEnum_XlLinkInfo linkInfo, struct tagVARIANT type, struct tagVARIANT editionRef, struct tagVARIANT *returnValue);"

[Excel_WorkbookLinkSources]
Class="Function"
Prototype="long Excel_WorkbookLinkSources(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT type, struct tagVARIANT *returnValue);"

[Excel_WorkbookMergeWorkbook]
Class="Function"
Prototype="long Excel_WorkbookMergeWorkbook(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename);"

[Excel_WorkbookNewWindow]
Class="Function"
Prototype="long Excel_WorkbookNewWindow(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_WorkbookOpenLinks]
Class="Function"
Prototype="long Excel_WorkbookOpenLinks(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, struct tagVARIANT readOnly, struct tagVARIANT type);"

[Excel_WorkbookPivotCaches]
Class="Function"
Prototype="long Excel_WorkbookPivotCaches(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_WorkbookPost]
Class="Function"
Prototype="long Excel_WorkbookPost(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT destName);"

[Excel_Workbook_PrintOut]
Class="Function"
Prototype="long Excel_Workbook_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_WorkbookPrintPreview]
Class="Function"
Prototype="long Excel_WorkbookPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_WorkbookProtect]
Class="Function"
Prototype="long Excel_WorkbookProtect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password, struct tagVARIANT structure, struct tagVARIANT windows);"

[Excel_WorkbookProtectSharing]
Class="Function"
Prototype="long Excel_WorkbookProtectSharing(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename, struct tagVARIANT password, struct tagVARIANT writeResPassword, struct tagVARIANT readOnlyRecommended, struct tagVARIANT createBackup, struct tagVARIANT sharingPassword);"

[Excel_WorkbookRefreshAll]
Class="Function"
Prototype="long Excel_WorkbookRefreshAll(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookReply]
Class="Function"
Prototype="long Excel_WorkbookReply(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookReplyAll]
Class="Function"
Prototype="long Excel_WorkbookReplyAll(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookRemoveUser]
Class="Function"
Prototype="long Excel_WorkbookRemoveUser(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index);"

[Excel_WorkbookRoute]
Class="Function"
Prototype="long Excel_WorkbookRoute(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookRunAutoMacros]
Class="Function"
Prototype="long Excel_WorkbookRunAutoMacros(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlRunAutoMacro which);"

[Excel_WorkbookSave]
Class="Function"
Prototype="long Excel_WorkbookSave(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookSaveAs]
Class="Function"
Prototype="long Excel_WorkbookSaveAs(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename, struct tagVARIANT fileFormat, struct tagVARIANT password, struct tagVARIANT writeResPassword, struct tagVARIANT readOnlyRecommended, struct tagVARIANT createBackup, enum ExcelEnum_XlSaveAsAccessMode accessMode, struct tagVARIANT conflictResolution, struct tagVARIANT addToMru, struct tagVARIANT textCodepage, struct tagVARIANT textVisualLayout);"

[Excel_WorkbookSaveCopyAs]
Class="Function"
Prototype="long Excel_WorkbookSaveCopyAs(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT filename);"

[Excel_WorkbookSendMail]
Class="Function"
Prototype="long Excel_WorkbookSendMail(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT recipients, struct tagVARIANT subject, struct tagVARIANT returnReceipt);"

[Excel_WorkbookSendMailer]
Class="Function"
Prototype="long Excel_WorkbookSendMailer(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT fileFormat, enum ExcelEnum_XlPriority priority);"

[Excel_WorkbookSetLinkOnData]
Class="Function"
Prototype="long Excel_WorkbookSetLinkOnData(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, struct tagVARIANT procedure);"

[Excel_WorkbookUnprotect]
Class="Function"
Prototype="long Excel_WorkbookUnprotect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT password);"

[Excel_WorkbookUnprotectSharing]
Class="Function"
Prototype="long Excel_WorkbookUnprotectSharing(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sharingPassword);"

[Excel_WorkbookUpdateFromFile]
Class="Function"
Prototype="long Excel_WorkbookUpdateFromFile(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookUpdateLink]
Class="Function"
Prototype="long Excel_WorkbookUpdateLink(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT type);"

[Excel_WorkbookHighlightChangesOptions]
Class="Function"
Prototype="long Excel_WorkbookHighlightChangesOptions(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT when, struct tagVARIANT who, struct tagVARIANT where);"

[Excel_WorkbookPurgeChangeHistoryNow]
Class="Function"
Prototype="long Excel_WorkbookPurgeChangeHistoryNow(CAObjHandle objectHandle, ERRORINFO *errorInfo, long days, struct tagVARIANT sharingPassword);"

[Excel_WorkbookAcceptAllChanges]
Class="Function"
Prototype="long Excel_WorkbookAcceptAllChanges(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT when, struct tagVARIANT who, struct tagVARIANT where);"

[Excel_WorkbookRejectAllChanges]
Class="Function"
Prototype="long Excel_WorkbookRejectAllChanges(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT when, struct tagVARIANT who, struct tagVARIANT where);"

[Excel_WorkbookPivotTableWizard]
Class="Function"
Prototype="long Excel_WorkbookPivotTableWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sourceType, struct tagVARIANT sourceData, struct tagVARIANT tableDestination, struct tagVARIANT tableName, struct tagVARIANT rowGrand, struct tagVARIANT columnGrand, struct tagVARIANT saveData, struct tagVARIANT hasAutoFormat, struct tagVARIANT autoPage, struct tagVARIANT reserved, struct tagVARIANT backgroundQuery, struct tagVARIANT optimizeCache, struct tagVARIANT pageFieldOrder, struct tagVARIANT pageFieldWrapCount, struct tagVARIANT readData, struct tagVARIANT connection);"

[Excel_WorkbookResetColors]
Class="Function"
Prototype="long Excel_WorkbookResetColors(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookFollowHyperlink]
Class="Function"
Prototype="long Excel_WorkbookFollowHyperlink(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *address, struct tagVARIANT subAddress, struct tagVARIANT newWindow, struct tagVARIANT addHistory, struct tagVARIANT extraInfo, struct tagVARIANT method, struct tagVARIANT headerInfo);"

[Excel_WorkbookAddToFavorites]
Class="Function"
Prototype="long Excel_WorkbookAddToFavorites(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookPrintOut]
Class="Function"
Prototype="long Excel_WorkbookPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_WorkbookWebPagePreview]
Class="Function"
Prototype="long Excel_WorkbookWebPagePreview(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbookReloadAs]
Class="Function"
Prototype="long Excel_WorkbookReloadAs(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoEncoding encoding);"

[Excel_WorkbookDummy1]
Class="Function"
Prototype="long Excel_WorkbookDummy1(CAObjHandle objectHandle, ERRORINFO *errorInfo, long unused);"

[Excel_Workbooksblt]
Class="Function"
Prototype="long Excel_Workbooksblt(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *s);"

[Excel_NewOLEObject]
Class="Function"
Prototype="long Excel_NewOLEObject(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OpenOLEObject]
Class="Function"
Prototype="long Excel_OpenOLEObject(const char *fileName, const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_ActiveOLEObject]
Class="Function"
Prototype="long Excel_ActiveOLEObject(const char *server, int supportMultithreading, unsigned long locale, int reserved, CAObjHandle *objectHandle);"

[Excel_OLEObjectBringToFront]
Class="Function"
Prototype="long Excel_OLEObjectBringToFront(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectCopy]
Class="Function"
Prototype="long Excel_OLEObjectCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectCopyPicture]
Class="Function"
Prototype="long Excel_OLEObjectCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, struct tagVARIANT *returnValue);"

[Excel_OLEObjectCut]
Class="Function"
Prototype="long Excel_OLEObjectCut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectDelete]
Class="Function"
Prototype="long Excel_OLEObjectDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectDuplicate]
Class="Function"
Prototype="long Excel_OLEObjectDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_OLEObjectSelect]
Class="Function"
Prototype="long Excel_OLEObjectSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace, struct tagVARIANT *returnValue);"

[Excel_OLEObjectSendToBack]
Class="Function"
Prototype="long Excel_OLEObjectSendToBack(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectActivate]
Class="Function"
Prototype="long Excel_OLEObjectActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectUpdate]
Class="Function"
Prototype="long Excel_OLEObjectUpdate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectVerb]
Class="Function"
Prototype="long Excel_OLEObjectVerb(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlOLEVerb verb, struct tagVARIANT *returnValue);"

[Excel_AdjustmentsGetItem]
Class="Function"
Prototype="long Excel_AdjustmentsGetItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, float *returnValue);"

[Excel_AdjustmentsSetItem]
Class="Function"
Prototype="long Excel_AdjustmentsSetItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, float newValue);"

[Excel_CalloutFormatAutomaticLength]
Class="Function"
Prototype="long Excel_CalloutFormatAutomaticLength(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_CalloutFormatCustomDrop]
Class="Function"
Prototype="long Excel_CalloutFormatCustomDrop(CAObjHandle objectHandle, ERRORINFO *errorInfo, float drop);"

[Excel_CalloutFormatCustomLength]
Class="Function"
Prototype="long Excel_CalloutFormatCustomLength(CAObjHandle objectHandle, ERRORINFO *errorInfo, float length);"

[Excel_CalloutFormatPresetDrop]
Class="Function"
Prototype="long Excel_CalloutFormatPresetDrop(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoCalloutDropType dropType);"

[Excel_ShapeNodesItem]
Class="Function"
Prototype="long Excel_ShapeNodesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ShapeNodesDelete]
Class="Function"
Prototype="long Excel_ShapeNodesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index);"

[Excel_ShapeNodesInsert]
Class="Function"
Prototype="long Excel_ShapeNodesInsert(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, enum ExcelEnum_MsoSegmentType segmentType, enum ExcelEnum_MsoEditingType editingType, float x1, float y1, float x2, float y2, float x3, float y3);"

[Excel_ShapeNodesSetEditingType]
Class="Function"
Prototype="long Excel_ShapeNodesSetEditingType(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, enum ExcelEnum_MsoEditingType editingType);"

[Excel_ShapeNodesSetPosition]
Class="Function"
Prototype="long Excel_ShapeNodesSetPosition(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, float x1, float y1);"

[Excel_ShapeNodesSetSegmentType]
Class="Function"
Prototype="long Excel_ShapeNodesSetSegmentType(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, enum ExcelEnum_MsoSegmentType segmentType);"

[Excel_PictureFmtIncrementBrightness]
Class="Function"
Prototype="long Excel_PictureFmtIncrementBrightness(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_PictureFmtIncrementContrast]
Class="Function"
Prototype="long Excel_PictureFmtIncrementContrast(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShadowFormatIncrementOffsetX]
Class="Function"
Prototype="long Excel_ShadowFormatIncrementOffsetX(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShadowFormatIncrementOffsetY]
Class="Function"
Prototype="long Excel_ShadowFormatIncrementOffsetY(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_TextEffectFmtToggleVerticalText]
Class="Function"
Prototype="long Excel_TextEffectFmtToggleVerticalText(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ThreeDFmtIncrementRotationX]
Class="Function"
Prototype="long Excel_ThreeDFmtIncrementRotationX(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ThreeDFmtIncrementRotationY]
Class="Function"
Prototype="long Excel_ThreeDFmtIncrementRotationY(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ThreeDFmtResetRotation]
Class="Function"
Prototype="long Excel_ThreeDFmtResetRotation(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ThreeDFmtSetThreeDFormat]
Class="Function"
Prototype="long Excel_ThreeDFmtSetThreeDFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPresetThreeDFormat presetThreeDFormat);"

[Excel_ThreeDFmtSetExtrusionDirection]
Class="Function"
Prototype="long Excel_ThreeDFmtSetExtrusionDirection(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPresetExtrusionDirection presetExtrusionDirection);"

[Excel_FillFormatBackground]
Class="Function"
Prototype="long Excel_FillFormatBackground(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_FillFormatOneColorGradient]
Class="Function"
Prototype="long Excel_FillFormatOneColorGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant, float degree);"

[Excel_FillFormatPatterned]
Class="Function"
Prototype="long Excel_FillFormatPatterned(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPatternType pattern);"

[Excel_FillFormatPresetGradient]
Class="Function"
Prototype="long Excel_FillFormatPresetGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant, enum ExcelEnum_MsoPresetGradientType presetGradientType);"

[Excel_FillFormatPresetTextured]
Class="Function"
Prototype="long Excel_FillFormatPresetTextured(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPresetTexture presetTexture);"

[Excel_FillFormatSolid]
Class="Function"
Prototype="long Excel_FillFormatSolid(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_FillFormatTwoColorGradient]
Class="Function"
Prototype="long Excel_FillFormatTwoColorGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant);"

[Excel_FillFormatUserPicture]
Class="Function"
Prototype="long Excel_FillFormatUserPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *pictureFile);"

[Excel_FillFormatUserTextured]
Class="Function"
Prototype="long Excel_FillFormatUserTextured(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *textureFile);"

[Excel_SheetsAdd]
Class="Function"
Prototype="long Excel_SheetsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after, struct tagVARIANT count, struct tagVARIANT type, CAObjHandle *returnValue);"

[Excel_SheetsCopy]
Class="Function"
Prototype="long Excel_SheetsCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_SheetsDelete]
Class="Function"
Prototype="long Excel_SheetsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_SheetsFillAcrossSheets]
Class="Function"
Prototype="long Excel_SheetsFillAcrossSheets(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle range, enum ExcelEnum_XlFillWith type);"

[Excel_SheetsItem]
Class="Function"
Prototype="long Excel_SheetsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SheetsMove]
Class="Function"
Prototype="long Excel_SheetsMove(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_Sheets_PrintOut]
Class="Function"
Prototype="long Excel_Sheets_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_SheetsPrintPreview]
Class="Function"
Prototype="long Excel_SheetsPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_SheetsSelect]
Class="Function"
Prototype="long Excel_SheetsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_Sheets_Default]
Class="Function"
Prototype="long Excel_Sheets_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SheetsPrintOut]
Class="Function"
Prototype="long Excel_SheetsPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_WorkbooksAdd]
Class="Function"
Prototype="long Excel_WorkbooksAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT template, CAObjHandle *returnValue);"

[Excel_WorkbooksClose]
Class="Function"
Prototype="long Excel_WorkbooksClose(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorkbooksItem]
Class="Function"
Prototype="long Excel_WorkbooksItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorkbooksOpen]
Class="Function"
Prototype="long Excel_WorkbooksOpen(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT updateLinks, struct tagVARIANT readOnly, struct tagVARIANT format, struct tagVARIANT password, struct tagVARIANT writeResPassword, struct tagVARIANT ignoreReadOnlyRecommended, struct tagVARIANT origin, struct tagVARIANT delimiter, struct tagVARIANT editable, struct tagVARIANT notify, struct tagVARIANT converter, struct tagVARIANT addToMru, CAObjHandle *returnValue);"

[Excel_Workbooks_OpenText]
Class="Function"
Prototype="long Excel_Workbooks_OpenText(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT origin, struct tagVARIANT startRow, struct tagVARIANT dataType, enum ExcelEnum_XlTextQualifier textQualifier, struct tagVARIANT consecutiveDelimiter, struct tagVARIANT tab, struct tagVARIANT semicolon, struct tagVARIANT comma, struct tagVARIANT space, struct tagVARIANT other, struct tagVARIANT otherChar, struct tagVARIANT fieldInfo, struct tagVARIANT textVisualLayout);"

[Excel_Workbooks_Default]
Class="Function"
Prototype="long Excel_Workbooks_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorkbooksOpenText]
Class="Function"
Prototype="long Excel_WorkbooksOpenText(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT origin, struct tagVARIANT startRow, struct tagVARIANT dataType, enum ExcelEnum_XlTextQualifier textQualifier, struct tagVARIANT consecutiveDelimiter, struct tagVARIANT tab, struct tagVARIANT semicolon, struct tagVARIANT comma, struct tagVARIANT space, struct tagVARIANT other, struct tagVARIANT otherChar, struct tagVARIANT fieldInfo, struct tagVARIANT textVisualLayout, struct tagVARIANT decimalSeparator, struct tagVARIANT thousandsSeparator);"

[Excel_PublishObjectDelete]
Class="Function"
Prototype="long Excel_PublishObjectDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PublishObjectPublish]
Class="Function"
Prototype="long Excel_PublishObjectPublish(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT create);"

[Excel_WebOptionsUseDefaultFolderSuffix]
Class="Function"
Prototype="long Excel_WebOptionsUseDefaultFolderSuffix(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_CubeFieldsItem]
Class="Function"
Prototype="long Excel_CubeFieldsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_CubeFields_Default]
Class="Function"
Prototype="long Excel_CubeFields_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WindowActivate]
Class="Function"
Prototype="long Excel_WindowActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_WindowActivateNext]
Class="Function"
Prototype="long Excel_WindowActivateNext(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_WindowActivatePrevious]
Class="Function"
Prototype="long Excel_WindowActivatePrevious(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_WindowClose]
Class="Function"
Prototype="long Excel_WindowClose(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT saveChanges, struct tagVARIANT filename, struct tagVARIANT routeWorkbook, short *returnValue);"

[Excel_WindowLargeScroll]
Class="Function"
Prototype="long Excel_WindowLargeScroll(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT down, struct tagVARIANT up, struct tagVARIANT toRight, struct tagVARIANT toLeft, struct tagVARIANT *returnValue);"

[Excel_WindowNewWindow]
Class="Function"
Prototype="long Excel_WindowNewWindow(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_WindowPrintOut]
Class="Function"
Prototype="long Excel_WindowPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName, struct tagVARIANT *returnValue);"

[Excel_WindowPrintPreview]
Class="Function"
Prototype="long Excel_WindowPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges, struct tagVARIANT *returnValue);"

[Excel_WindowScrollWorkbookTabs]
Class="Function"
Prototype="long Excel_WindowScrollWorkbookTabs(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sheets, struct tagVARIANT position, struct tagVARIANT *returnValue);"

[Excel_WindowSmallScroll]
Class="Function"
Prototype="long Excel_WindowSmallScroll(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT down, struct tagVARIANT up, struct tagVARIANT toRight, struct tagVARIANT toLeft, struct tagVARIANT *returnValue);"

[Excel_WindowPointsToScreenPixelsX]
Class="Function"
Prototype="long Excel_WindowPointsToScreenPixelsX(CAObjHandle objectHandle, ERRORINFO *errorInfo, long points, long *returnValue);"

[Excel_WindowPointsToScreenPixelsY]
Class="Function"
Prototype="long Excel_WindowPointsToScreenPixelsY(CAObjHandle objectHandle, ERRORINFO *errorInfo, long points, long *returnValue);"

[Excel_WindowRangeFromPoint]
Class="Function"
Prototype="long Excel_WindowRangeFromPoint(CAObjHandle objectHandle, ERRORINFO *errorInfo, long x, long y, CAObjHandle *returnValue);"

[Excel_WindowScrollIntoView]
Class="Function"
Prototype="long Excel_WindowScrollIntoView(CAObjHandle objectHandle, ERRORINFO *errorInfo, long left, long top, long width, long height, struct tagVARIANT start);"

[Excel_WindowsArrange]
Class="Function"
Prototype="long Excel_WindowsArrange(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlArrangeStyle arrangeStyle, struct tagVARIANT activeWorkbook, struct tagVARIANT syncHorizontal, struct tagVARIANT syncVertical, struct tagVARIANT *returnValue);"

[Excel_WindowsItem]
Class="Function"
Prototype="long Excel_WindowsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_Windows_Default]
Class="Function"
Prototype="long Excel_Windows_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetFunction_WSFunction]
Class="Function"
Prototype="long Excel_WorksheetFunction_WSFunction(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionCount]
Class="Function"
Prototype="long Excel_WorksheetFunctionCount(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionIsNA]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsNA(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionIsError]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsError(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionSum]
Class="Function"
Prototype="long Excel_WorksheetFunctionSum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionAverage]
Class="Function"
Prototype="long Excel_WorksheetFunctionAverage(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionMin]
Class="Function"
Prototype="long Excel_WorksheetFunctionMin(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionMax]
Class="Function"
Prototype="long Excel_WorksheetFunctionMax(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionNpv]
Class="Function"
Prototype="long Excel_WorksheetFunctionNpv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionStDev]
Class="Function"
Prototype="long Excel_WorksheetFunctionStDev(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionDollar]
Class="Function"
Prototype="long Excel_WorksheetFunctionDollar(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, char **returnValue);"

[Excel_WorksheetFunctionFixed]
Class="Function"
Prototype="long Excel_WorksheetFunctionFixed(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, char **returnValue);"

[Excel_WorksheetFunctionPi]
Class="Function"
Prototype="long Excel_WorksheetFunctionPi(CAObjHandle objectHandle, ERRORINFO *errorInfo, double *returnValue);"

[Excel_WorksheetFunctionLn]
Class="Function"
Prototype="long Excel_WorksheetFunctionLn(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionLog10]
Class="Function"
Prototype="long Excel_WorksheetFunctionLog10(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionRound]
Class="Function"
Prototype="long Excel_WorksheetFunctionRound(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionLookup]
Class="Function"
Prototype="long Excel_WorksheetFunctionLookup(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionIndex]
Class="Function"
Prototype="long Excel_WorksheetFunctionIndex(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionRept]
Class="Function"
Prototype="long Excel_WorksheetFunctionRept(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, double arg2, char **returnValue);"

[Excel_WorksheetFunctionAnd]
Class="Function"
Prototype="long Excel_WorksheetFunctionAnd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, short *returnValue);"

[Excel_WorksheetFunctionOr]
Class="Function"
Prototype="long Excel_WorksheetFunctionOr(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, short *returnValue);"

[Excel_WorksheetFunctionDCount]
Class="Function"
Prototype="long Excel_WorksheetFunctionDCount(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDSum]
Class="Function"
Prototype="long Excel_WorksheetFunctionDSum(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDAverage]
Class="Function"
Prototype="long Excel_WorksheetFunctionDAverage(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDMin]
Class="Function"
Prototype="long Excel_WorksheetFunctionDMin(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDMax]
Class="Function"
Prototype="long Excel_WorksheetFunctionDMax(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDStDev]
Class="Function"
Prototype="long Excel_WorksheetFunctionDStDev(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionVar]
Class="Function"
Prototype="long Excel_WorksheetFunctionVar(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionDVar]
Class="Function"
Prototype="long Excel_WorksheetFunctionDVar(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionText]
Class="Function"
Prototype="long Excel_WorksheetFunctionText(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, const char *arg2, char **returnValue);"

[Excel_WorksheetFunctionLinEst]
Class="Function"
Prototype="long Excel_WorksheetFunctionLinEst(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionTrend]
Class="Function"
Prototype="long Excel_WorksheetFunctionTrend(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionLogEst]
Class="Function"
Prototype="long Excel_WorksheetFunctionLogEst(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionGrowth]
Class="Function"
Prototype="long Excel_WorksheetFunctionGrowth(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionPv]
Class="Function"
Prototype="long Excel_WorksheetFunctionPv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionFv]
Class="Function"
Prototype="long Excel_WorksheetFunctionFv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionNPer]
Class="Function"
Prototype="long Excel_WorksheetFunctionNPer(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionPmt]
Class="Function"
Prototype="long Excel_WorksheetFunctionPmt(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionRate]
Class="Function"
Prototype="long Excel_WorksheetFunctionRate(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, double *returnValue);"

[Excel_WorksheetFunctionMIrr]
Class="Function"
Prototype="long Excel_WorksheetFunctionMIrr(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionIrr]
Class="Function"
Prototype="long Excel_WorksheetFunctionIrr(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionMatch]
Class="Function"
Prototype="long Excel_WorksheetFunctionMatch(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionWeekday]
Class="Function"
Prototype="long Excel_WorksheetFunctionWeekday(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionSearch]
Class="Function"
Prototype="long Excel_WorksheetFunctionSearch(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, const char *arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionTranspose]
Class="Function"
Prototype="long Excel_WorksheetFunctionTranspose(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionAtan2]
Class="Function"
Prototype="long Excel_WorksheetFunctionAtan2(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionAsin]
Class="Function"
Prototype="long Excel_WorksheetFunctionAsin(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionAcos]
Class="Function"
Prototype="long Excel_WorksheetFunctionAcos(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionChoose]
Class="Function"
Prototype="long Excel_WorksheetFunctionChoose(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionHLookup]
Class="Function"
Prototype="long Excel_WorksheetFunctionHLookup(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionVLookup]
Class="Function"
Prototype="long Excel_WorksheetFunctionVLookup(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionLog]
Class="Function"
Prototype="long Excel_WorksheetFunctionLog(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionProper]
Class="Function"
Prototype="long Excel_WorksheetFunctionProper(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, char **returnValue);"

[Excel_WorksheetFunctionTrim]
Class="Function"
Prototype="long Excel_WorksheetFunctionTrim(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, char **returnValue);"

[Excel_WorksheetFunctionReplace]
Class="Function"
Prototype="long Excel_WorksheetFunctionReplace(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, double arg2, double arg3, const char *arg4, char **returnValue);"

[Excel_WorksheetFunctionSubstitute]
Class="Function"
Prototype="long Excel_WorksheetFunctionSubstitute(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, const char *arg2, const char *arg3, struct tagVARIANT arg4, char **returnValue);"

[Excel_WorksheetFunctionFind]
Class="Function"
Prototype="long Excel_WorksheetFunctionFind(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, const char *arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionIsErr]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsErr(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionIsText]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsText(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionIsNumber]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsNumber(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionSln]
Class="Function"
Prototype="long Excel_WorksheetFunctionSln(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionSyd]
Class="Function"
Prototype="long Excel_WorksheetFunctionSyd(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, double *returnValue);"

[Excel_WorksheetFunctionDdb]
Class="Function"
Prototype="long Excel_WorksheetFunctionDdb(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionClean]
Class="Function"
Prototype="long Excel_WorksheetFunctionClean(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, char **returnValue);"

[Excel_WorksheetFunctionMDeterm]
Class="Function"
Prototype="long Excel_WorksheetFunctionMDeterm(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double *returnValue);"

[Excel_WorksheetFunctionMInverse]
Class="Function"
Prototype="long Excel_WorksheetFunctionMInverse(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionMMult]
Class="Function"
Prototype="long Excel_WorksheetFunctionMMult(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionIpmt]
Class="Function"
Prototype="long Excel_WorksheetFunctionIpmt(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, double *returnValue);"

[Excel_WorksheetFunctionPpmt]
Class="Function"
Prototype="long Excel_WorksheetFunctionPpmt(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, double *returnValue);"

[Excel_WorksheetFunctionCountA]
Class="Function"
Prototype="long Excel_WorksheetFunctionCountA(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionProduct]
Class="Function"
Prototype="long Excel_WorksheetFunctionProduct(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionFact]
Class="Function"
Prototype="long Excel_WorksheetFunctionFact(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionDProduct]
Class="Function"
Prototype="long Excel_WorksheetFunctionDProduct(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionIsNonText]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsNonText(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionStDevP]
Class="Function"
Prototype="long Excel_WorksheetFunctionStDevP(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionVarP]
Class="Function"
Prototype="long Excel_WorksheetFunctionVarP(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionDStDevP]
Class="Function"
Prototype="long Excel_WorksheetFunctionDStDevP(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDVarP]
Class="Function"
Prototype="long Excel_WorksheetFunctionDVarP(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionIsLogical]
Class="Function"
Prototype="long Excel_WorksheetFunctionIsLogical(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, short *returnValue);"

[Excel_WorksheetFunctionDCountA]
Class="Function"
Prototype="long Excel_WorksheetFunctionDCountA(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionUSDollar]
Class="Function"
Prototype="long Excel_WorksheetFunctionUSDollar(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, char **returnValue);"

[Excel_WorksheetFunctionFindB]
Class="Function"
Prototype="long Excel_WorksheetFunctionFindB(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, const char *arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionSearchB]
Class="Function"
Prototype="long Excel_WorksheetFunctionSearchB(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, const char *arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionReplaceB]
Class="Function"
Prototype="long Excel_WorksheetFunctionReplaceB(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, double arg2, double arg3, const char *arg4, char **returnValue);"

[Excel_WorksheetFunctionRoundUp]
Class="Function"
Prototype="long Excel_WorksheetFunctionRoundUp(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionRoundDown]
Class="Function"
Prototype="long Excel_WorksheetFunctionRoundDown(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionRank]
Class="Function"
Prototype="long Excel_WorksheetFunctionRank(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, CAObjHandle arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionDays360]
Class="Function"
Prototype="long Excel_WorksheetFunctionDays360(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionVdb]
Class="Function"
Prototype="long Excel_WorksheetFunctionVdb(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, double arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, double *returnValue);"

[Excel_WorksheetFunctionMedian]
Class="Function"
Prototype="long Excel_WorksheetFunctionMedian(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionSumProduct]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumProduct(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionSinh]
Class="Function"
Prototype="long Excel_WorksheetFunctionSinh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionCosh]
Class="Function"
Prototype="long Excel_WorksheetFunctionCosh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionTanh]
Class="Function"
Prototype="long Excel_WorksheetFunctionTanh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionAsinh]
Class="Function"
Prototype="long Excel_WorksheetFunctionAsinh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionAcosh]
Class="Function"
Prototype="long Excel_WorksheetFunctionAcosh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionAtanh]
Class="Function"
Prototype="long Excel_WorksheetFunctionAtanh(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionDGet]
Class="Function"
Prototype="long Excel_WorksheetFunctionDGet(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionDb]
Class="Function"
Prototype="long Excel_WorksheetFunctionDb(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionFrequency]
Class="Function"
Prototype="long Excel_WorksheetFunctionFrequency(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT *returnValue);"

[Excel_WorksheetFunctionAveDev]
Class="Function"
Prototype="long Excel_WorksheetFunctionAveDev(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionBetaDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionBetaDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionGammaLn]
Class="Function"
Prototype="long Excel_WorksheetFunctionGammaLn(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionBetaInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionBetaInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, double *returnValue);"

[Excel_WorksheetFunctionBinomDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionBinomDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, short arg4, double *returnValue);"

[Excel_WorksheetFunctionChiDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionChiDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionChiInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionChiInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionCombin]
Class="Function"
Prototype="long Excel_WorksheetFunctionCombin(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionConfidence]
Class="Function"
Prototype="long Excel_WorksheetFunctionConfidence(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionCritBinom]
Class="Function"
Prototype="long Excel_WorksheetFunctionCritBinom(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionEven]
Class="Function"
Prototype="long Excel_WorksheetFunctionEven(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionExponDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionExponDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, short arg3, double *returnValue);"

[Excel_WorksheetFunctionFDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionFDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionFInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionFInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionFisher]
Class="Function"
Prototype="long Excel_WorksheetFunctionFisher(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionFisherInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionFisherInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionFloor]
Class="Function"
Prototype="long Excel_WorksheetFunctionFloor(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionGammaDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionGammaDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, short arg4, double *returnValue);"

[Excel_WorksheetFunctionGammaInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionGammaInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionCeiling]
Class="Function"
Prototype="long Excel_WorksheetFunctionCeiling(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionHypGeomDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionHypGeomDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, double *returnValue);"

[Excel_WorksheetFunctionLogNormDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionLogNormDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionLogInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionLogInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionNegBinomDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionNegBinomDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionNormDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionNormDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, short arg4, double *returnValue);"

[Excel_WorksheetFunctionNormSDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionNormSDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionNormInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionNormInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionNormSInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionNormSInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionStandardize]
Class="Function"
Prototype="long Excel_WorksheetFunctionStandardize(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionOdd]
Class="Function"
Prototype="long Excel_WorksheetFunctionOdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionPermut]
Class="Function"
Prototype="long Excel_WorksheetFunctionPermut(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionPoisson]
Class="Function"
Prototype="long Excel_WorksheetFunctionPoisson(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, short arg3, double *returnValue);"

[Excel_WorksheetFunctionTDist]
Class="Function"
Prototype="long Excel_WorksheetFunctionTDist(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double *returnValue);"

[Excel_WorksheetFunctionWeibull]
Class="Function"
Prototype="long Excel_WorksheetFunctionWeibull(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, short arg4, double *returnValue);"

[Excel_WorksheetFunctionSumXMY2]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumXMY2(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionSumX2MY2]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumX2MY2(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionSumX2PY2]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumX2PY2(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionChiTest]
Class="Function"
Prototype="long Excel_WorksheetFunctionChiTest(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionCorrel]
Class="Function"
Prototype="long Excel_WorksheetFunctionCorrel(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionCovar]
Class="Function"
Prototype="long Excel_WorksheetFunctionCovar(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionForecast]
Class="Function"
Prototype="long Excel_WorksheetFunctionForecast(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionFTest]
Class="Function"
Prototype="long Excel_WorksheetFunctionFTest(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionIntercept]
Class="Function"
Prototype="long Excel_WorksheetFunctionIntercept(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionPearson]
Class="Function"
Prototype="long Excel_WorksheetFunctionPearson(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionRSq]
Class="Function"
Prototype="long Excel_WorksheetFunctionRSq(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionStEyx]
Class="Function"
Prototype="long Excel_WorksheetFunctionStEyx(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionSlope]
Class="Function"
Prototype="long Excel_WorksheetFunctionSlope(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionTTest]
Class="Function"
Prototype="long Excel_WorksheetFunctionTTest(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double arg3, double arg4, double *returnValue);"

[Excel_WorksheetFunctionProb]
Class="Function"
Prototype="long Excel_WorksheetFunctionProb(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, double arg3, struct tagVARIANT arg4, double *returnValue);"

[Excel_WorksheetFunctionDevSq]
Class="Function"
Prototype="long Excel_WorksheetFunctionDevSq(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionGeoMean]
Class="Function"
Prototype="long Excel_WorksheetFunctionGeoMean(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionHarMean]
Class="Function"
Prototype="long Excel_WorksheetFunctionHarMean(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionSumSq]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumSq(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionKurt]
Class="Function"
Prototype="long Excel_WorksheetFunctionKurt(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionSkew]
Class="Function"
Prototype="long Excel_WorksheetFunctionSkew(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionZTest]
Class="Function"
Prototype="long Excel_WorksheetFunctionZTest(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionLarge]
Class="Function"
Prototype="long Excel_WorksheetFunctionLarge(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionSmall]
Class="Function"
Prototype="long Excel_WorksheetFunctionSmall(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionQuartile]
Class="Function"
Prototype="long Excel_WorksheetFunctionQuartile(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionPercentile]
Class="Function"
Prototype="long Excel_WorksheetFunctionPercentile(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionPercentRank]
Class="Function"
Prototype="long Excel_WorksheetFunctionPercentRank(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionMode]
Class="Function"
Prototype="long Excel_WorksheetFunctionMode(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionTrimMean]
Class="Function"
Prototype="long Excel_WorksheetFunctionTrimMean(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionTInv]
Class="Function"
Prototype="long Excel_WorksheetFunctionTInv(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionPower]
Class="Function"
Prototype="long Excel_WorksheetFunctionPower(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double *returnValue);"

[Excel_WorksheetFunctionRadians]
Class="Function"
Prototype="long Excel_WorksheetFunctionRadians(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionDegrees]
Class="Function"
Prototype="long Excel_WorksheetFunctionDegrees(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double *returnValue);"

[Excel_WorksheetFunctionSubtotal]
Class="Function"
Prototype="long Excel_WorksheetFunctionSubtotal(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, CAObjHandle arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, double *returnValue);"

[Excel_WorksheetFunctionSumIf]
Class="Function"
Prototype="long Excel_WorksheetFunctionSumIf(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, double *returnValue);"

[Excel_WorksheetFunctionCountIf]
Class="Function"
Prototype="long Excel_WorksheetFunctionCountIf(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, struct tagVARIANT arg2, double *returnValue);"

[Excel_WorksheetFunctionCountBlank]
Class="Function"
Prototype="long Excel_WorksheetFunctionCountBlank(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, double *returnValue);"

[Excel_WorksheetFunctionIspmt]
Class="Function"
Prototype="long Excel_WorksheetFunctionIspmt(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, double arg2, double arg3, double arg4, double *returnValue);"

[Excel_WorksheetFunctionRoman]
Class="Function"
Prototype="long Excel_WorksheetFunctionRoman(CAObjHandle objectHandle, ERRORINFO *errorInfo, double arg1, struct tagVARIANT arg2, char **returnValue);"

[Excel_WorksheetFunctionAsc]
Class="Function"
Prototype="long Excel_WorksheetFunctionAsc(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, char **returnValue);"

[Excel_WorksheetFunctionDbcs]
Class="Function"
Prototype="long Excel_WorksheetFunctionDbcs(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *arg1, char **returnValue);"

[Excel_WorksheetFunctionPhonetic]
Class="Function"
Prototype="long Excel_WorksheetFunctionPhonetic(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle arg1, char **returnValue);"

[Excel_RangeActivate]
Class="Function"
Prototype="long Excel_RangeActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeAddress]
Class="Function"
Prototype="long Excel_RangeAddress(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowAbsolute, struct tagVARIANT columnAbsolute, enum ExcelEnum_XlReferenceStyle referenceStyle, struct tagVARIANT external, struct tagVARIANT relativeTo, char **returnValue);"

[Excel_RangeAddressLocal]
Class="Function"
Prototype="long Excel_RangeAddressLocal(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowAbsolute, struct tagVARIANT columnAbsolute, enum ExcelEnum_XlReferenceStyle referenceStyle, struct tagVARIANT external, struct tagVARIANT relativeTo, char **returnValue);"

[Excel_RangeAdvancedFilter]
Class="Function"
Prototype="long Excel_RangeAdvancedFilter(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlFilterAction action, struct tagVARIANT criteriaRange, struct tagVARIANT copyToRange, struct tagVARIANT unique, struct tagVARIANT *returnValue);"

[Excel_RangeApplyNames]
Class="Function"
Prototype="long Excel_RangeApplyNames(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT names, struct tagVARIANT ignoreRelativeAbsolute, struct tagVARIANT useRowColumnNames, struct tagVARIANT omitColumn, struct tagVARIANT omitRow, enum ExcelEnum_XlApplyNamesOrder order, struct tagVARIANT appendLast, struct tagVARIANT *returnValue);"

[Excel_RangeApplyOutlineStyles]
Class="Function"
Prototype="long Excel_RangeApplyOutlineStyles(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeAutoComplete]
Class="Function"
Prototype="long Excel_RangeAutoComplete(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *string, char **returnValue);"

[Excel_RangeAutoFill]
Class="Function"
Prototype="long Excel_RangeAutoFill(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle destination, enum ExcelEnum_XlAutoFillType type, struct tagVARIANT *returnValue);"

[Excel_RangeAutoFilter]
Class="Function"
Prototype="long Excel_RangeAutoFilter(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT field, struct tagVARIANT criteria1, enum ExcelEnum_XlAutoFilterOperator operator, struct tagVARIANT criteria2, struct tagVARIANT visibleDropDown, struct tagVARIANT *returnValue);"

[Excel_RangeAutoFit]
Class="Function"
Prototype="long Excel_RangeAutoFit(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeAutoFormat]
Class="Function"
Prototype="long Excel_RangeAutoFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlRangeAutoFormat format, struct tagVARIANT number, struct tagVARIANT font, struct tagVARIANT alignment, struct tagVARIANT border, struct tagVARIANT pattern, struct tagVARIANT width, struct tagVARIANT *returnValue);"

[Excel_RangeAutoOutline]
Class="Function"
Prototype="long Excel_RangeAutoOutline(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeBorderAround]
Class="Function"
Prototype="long Excel_RangeBorderAround(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT lineStyle, enum ExcelEnum_XlBorderWeight weight, enum ExcelEnum_XlColorIndex colorIndex, struct tagVARIANT color, struct tagVARIANT *returnValue);"

[Excel_RangeCalculate]
Class="Function"
Prototype="long Excel_RangeCalculate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeCharacters]
Class="Function"
Prototype="long Excel_RangeCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_RangeCheckSpelling]
Class="Function"
Prototype="long Excel_RangeCheckSpelling(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT customDictionary, struct tagVARIANT ignoreUppercase, struct tagVARIANT alwaysSuggest, struct tagVARIANT spellLang, struct tagVARIANT *returnValue);"

[Excel_RangeClear]
Class="Function"
Prototype="long Excel_RangeClear(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeClearContents]
Class="Function"
Prototype="long Excel_RangeClearContents(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeClearFormats]
Class="Function"
Prototype="long Excel_RangeClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeClearNotes]
Class="Function"
Prototype="long Excel_RangeClearNotes(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeClearOutline]
Class="Function"
Prototype="long Excel_RangeClearOutline(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeColumnDifferences]
Class="Function"
Prototype="long Excel_RangeColumnDifferences(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT comparison, CAObjHandle *returnValue);"

[Excel_RangeConsolidate]
Class="Function"
Prototype="long Excel_RangeConsolidate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sources, struct tagVARIANT function, struct tagVARIANT topRow, struct tagVARIANT leftColumn, struct tagVARIANT createLinks, struct tagVARIANT *returnValue);"

[Excel_RangeCopy]
Class="Function"
Prototype="long Excel_RangeCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT destination, struct tagVARIANT *returnValue);"

[Excel_RangeCopyFromRecordset]
Class="Function"
Prototype="long Excel_RangeCopyFromRecordset(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown *data, struct tagVARIANT maxRows, struct tagVARIANT maxColumns, long *returnValue);"

[Excel_RangeCopyPicture]
Class="Function"
Prototype="long Excel_RangeCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, struct tagVARIANT *returnValue);"

[Excel_RangeCreateNames]
Class="Function"
Prototype="long Excel_RangeCreateNames(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT top, struct tagVARIANT left, struct tagVARIANT bottom, struct tagVARIANT right, struct tagVARIANT *returnValue);"

[Excel_RangeCreatePublisher]
Class="Function"
Prototype="long Excel_RangeCreatePublisher(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT edition, enum ExcelEnum_XlPictureAppearance appearance, struct tagVARIANT containsPICT, struct tagVARIANT containsBIFF, struct tagVARIANT containsRTF, struct tagVARIANT containsVALU, struct tagVARIANT *returnValue);"

[Excel_RangeCut]
Class="Function"
Prototype="long Excel_RangeCut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT destination, struct tagVARIANT *returnValue);"

[Excel_RangeDataSeries]
Class="Function"
Prototype="long Excel_RangeDataSeries(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowcol, enum ExcelEnum_XlDataSeriesType type, enum ExcelEnum_XlDataSeriesDate date, struct tagVARIANT step, struct tagVARIANT stop, struct tagVARIANT trend, struct tagVARIANT *returnValue);"

[Excel_RangeGet_Default]
Class="Function"
Prototype="long Excel_RangeGet_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowIndex, struct tagVARIANT columnIndex, struct tagVARIANT *returnValue);"

[Excel_RangeSet_Default]
Class="Function"
Prototype="long Excel_RangeSet_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowIndex, struct tagVARIANT columnIndex, struct tagVARIANT newValue);"

[Excel_RangeDelete]
Class="Function"
Prototype="long Excel_RangeDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT shift, struct tagVARIANT *returnValue);"

[Excel_RangeDialogBox]
Class="Function"
Prototype="long Excel_RangeDialogBox(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeEditionOptions]
Class="Function"
Prototype="long Excel_RangeEditionOptions(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlEditionType type, enum ExcelEnum_XlEditionOptionsOption option, struct tagVARIANT name, struct tagVARIANT reference, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlPictureAppearance chartSize, struct tagVARIANT format, struct tagVARIANT *returnValue);"

[Excel_RangeEnd]
Class="Function"
Prototype="long Excel_RangeEnd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDirection direction, CAObjHandle *returnValue);"

[Excel_RangeFillDown]
Class="Function"
Prototype="long Excel_RangeFillDown(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeFillLeft]
Class="Function"
Prototype="long Excel_RangeFillLeft(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeFillRight]
Class="Function"
Prototype="long Excel_RangeFillRight(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeFillUp]
Class="Function"
Prototype="long Excel_RangeFillUp(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeFind]
Class="Function"
Prototype="long Excel_RangeFind(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT what, struct tagVARIANT after, struct tagVARIANT lookIn, struct tagVARIANT lookAt, struct tagVARIANT searchOrder, enum ExcelEnum_XlSearchDirection searchDirection, struct tagVARIANT matchCase, struct tagVARIANT matchByte, CAObjHandle *returnValue);"

[Excel_RangeFindNext]
Class="Function"
Prototype="long Excel_RangeFindNext(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT after, CAObjHandle *returnValue);"

[Excel_RangeFindPrevious]
Class="Function"
Prototype="long Excel_RangeFindPrevious(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT after, CAObjHandle *returnValue);"

[Excel_RangeFunctionWizard]
Class="Function"
Prototype="long Excel_RangeFunctionWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeGoalSeek]
Class="Function"
Prototype="long Excel_RangeGoalSeek(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT goal, CAObjHandle changingCell, short *returnValue);"

[Excel_RangeGroup]
Class="Function"
Prototype="long Excel_RangeGroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT end, struct tagVARIANT by, struct tagVARIANT periods, struct tagVARIANT *returnValue);"

[Excel_RangeInsertIndent]
Class="Function"
Prototype="long Excel_RangeInsertIndent(CAObjHandle objectHandle, ERRORINFO *errorInfo, long insertAmount);"

[Excel_RangeInsert]
Class="Function"
Prototype="long Excel_RangeInsert(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT shift, struct tagVARIANT *returnValue);"

[Excel_RangeGetItem]
Class="Function"
Prototype="long Excel_RangeGetItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowIndex, struct tagVARIANT columnIndex, struct tagVARIANT *returnValue);"

[Excel_RangeSetItem]
Class="Function"
Prototype="long Excel_RangeSetItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowIndex, struct tagVARIANT columnIndex, struct tagVARIANT newValue);"

[Excel_RangeJustify]
Class="Function"
Prototype="long Excel_RangeJustify(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeListNames]
Class="Function"
Prototype="long Excel_RangeListNames(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeMerge]
Class="Function"
Prototype="long Excel_RangeMerge(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT across);"

[Excel_RangeUnMerge]
Class="Function"
Prototype="long Excel_RangeUnMerge(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_RangeNavigateArrow]
Class="Function"
Prototype="long Excel_RangeNavigateArrow(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT towardPrecedent, struct tagVARIANT arrowNumber, struct tagVARIANT linkNumber, struct tagVARIANT *returnValue);"

[Excel_RangeNoteText]
Class="Function"
Prototype="long Excel_RangeNoteText(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT text, struct tagVARIANT start, struct tagVARIANT length, char **returnValue);"

[Excel_RangeOffset]
Class="Function"
Prototype="long Excel_RangeOffset(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowOffset, struct tagVARIANT columnOffset, CAObjHandle *returnValue);"

[Excel_RangeParse]
Class="Function"
Prototype="long Excel_RangeParse(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT parseLine, struct tagVARIANT destination, struct tagVARIANT *returnValue);"

[Excel_RangePasteSpecial]
Class="Function"
Prototype="long Excel_RangePasteSpecial(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPasteType paste, enum ExcelEnum_XlPasteSpecialOperation operation, struct tagVARIANT skipBlanks, struct tagVARIANT transpose, struct tagVARIANT *returnValue);"

[Excel_Range_PrintOut]
Class="Function"
Prototype="long Excel_Range_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT *returnValue);"

[Excel_RangePrintPreview]
Class="Function"
Prototype="long Excel_RangePrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges, struct tagVARIANT *returnValue);"

[Excel_RangeRange]
Class="Function"
Prototype="long Excel_RangeRange(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT cell1, struct tagVARIANT cell2, CAObjHandle *returnValue);"

[Excel_RangeRemoveSubtotal]
Class="Function"
Prototype="long Excel_RangeRemoveSubtotal(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeReplace]
Class="Function"
Prototype="long Excel_RangeReplace(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT what, struct tagVARIANT replacement, struct tagVARIANT lookAt, struct tagVARIANT searchOrder, struct tagVARIANT matchCase, struct tagVARIANT matchByte, short *returnValue);"

[Excel_RangeResize]
Class="Function"
Prototype="long Excel_RangeResize(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowSize, struct tagVARIANT columnSize, CAObjHandle *returnValue);"

[Excel_RangeRowDifferences]
Class="Function"
Prototype="long Excel_RangeRowDifferences(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT comparison, CAObjHandle *returnValue);"

[Excel_RangeRun]
Class="Function"
Prototype="long Excel_RangeRun(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, struct tagVARIANT *returnValue);"

[Excel_RangeSelect]
Class="Function"
Prototype="long Excel_RangeSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeShow]
Class="Function"
Prototype="long Excel_RangeShow(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeShowDependents]
Class="Function"
Prototype="long Excel_RangeShowDependents(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT remove, struct tagVARIANT *returnValue);"

[Excel_RangeShowErrors]
Class="Function"
Prototype="long Excel_RangeShowErrors(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeShowPrecedents]
Class="Function"
Prototype="long Excel_RangeShowPrecedents(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT remove, struct tagVARIANT *returnValue);"

[Excel_RangeSort]
Class="Function"
Prototype="long Excel_RangeSort(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT key1, enum ExcelEnum_XlSortOrder order1, struct tagVARIANT key2, struct tagVARIANT type, enum ExcelEnum_XlSortOrder order2, struct tagVARIANT key3, enum ExcelEnum_XlSortOrder order3, enum ExcelEnum_XlYesNoGuess header, struct tagVARIANT orderCustom, struct tagVARIANT matchCase, enum ExcelEnum_XlSortOrientation orientation, enum ExcelEnum_XlSortMethod sortMethod, struct tagVARIANT *returnValue);"

[Excel_RangeSortSpecial]
Class="Function"
Prototype="long Excel_RangeSortSpecial(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlSortMethod sortMethod, struct tagVARIANT key1, enum ExcelEnum_XlSortOrder order1, struct tagVARIANT type, struct tagVARIANT key2, enum ExcelEnum_XlSortOrder order2, struct tagVARIANT key3, enum ExcelEnum_XlSortOrder order3, enum ExcelEnum_XlYesNoGuess header, struct tagVARIANT orderCustom, struct tagVARIANT matchCase, enum ExcelEnum_XlSortOrientation orientation, struct tagVARIANT *returnValue);"

[Excel_RangeSpecialCells]
Class="Function"
Prototype="long Excel_RangeSpecialCells(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlCellType type, struct tagVARIANT value, CAObjHandle *returnValue);"

[Excel_RangeSubscribeTo]
Class="Function"
Prototype="long Excel_RangeSubscribeTo(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *edition, enum ExcelEnum_XlSubscribeToFormat format, struct tagVARIANT *returnValue);"

[Excel_RangeSubtotal]
Class="Function"
Prototype="long Excel_RangeSubtotal(CAObjHandle objectHandle, ERRORINFO *errorInfo, long groupBy, enum ExcelEnum_XlConsolidationFunction function, struct tagVARIANT totalList, struct tagVARIANT replace, struct tagVARIANT pageBreaks, enum ExcelEnum_XlSummaryRow summaryBelowData, struct tagVARIANT *returnValue);"

[Excel_RangeTable]
Class="Function"
Prototype="long Excel_RangeTable(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowInput, struct tagVARIANT columnInput, struct tagVARIANT *returnValue);"

[Excel_RangeTextToColumns]
Class="Function"
Prototype="long Excel_RangeTextToColumns(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT destination, enum ExcelEnum_XlTextParsingType dataType, enum ExcelEnum_XlTextQualifier textQualifier, struct tagVARIANT consecutiveDelimiter, struct tagVARIANT tab, struct tagVARIANT semicolon, struct tagVARIANT comma, struct tagVARIANT space, struct tagVARIANT other, struct tagVARIANT otherChar, struct tagVARIANT fieldInfo, struct tagVARIANT decimalSeparator, struct tagVARIANT thousandsSeparator, struct tagVARIANT *returnValue);"

[Excel_RangeUngroup]
Class="Function"
Prototype="long Excel_RangeUngroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_RangeAddComment]
Class="Function"
Prototype="long Excel_RangeAddComment(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT text, CAObjHandle *returnValue);"

[Excel_RangeClearComments]
Class="Function"
Prototype="long Excel_RangeClearComments(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_RangeSetPhonetic]
Class="Function"
Prototype="long Excel_RangeSetPhonetic(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_RangePrintOut]
Class="Function"
Prototype="long Excel_RangePrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName, struct tagVARIANT *returnValue);"

[Excel_VPageBreakDelete]
Class="Function"
Prototype="long Excel_VPageBreakDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_VPageBreakDragOff]
Class="Function"
Prototype="long Excel_VPageBreakDragOff(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDirection direction, long regionIndex);"

[Excel_HPageBreakDelete]
Class="Function"
Prototype="long Excel_HPageBreakDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_HPageBreakDragOff]
Class="Function"
Prototype="long Excel_HPageBreakDragOff(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDirection direction, long regionIndex);"

[Excel_HPageBreaksItem]
Class="Function"
Prototype="long Excel_HPageBreaksItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_HPageBreaks_Default]
Class="Function"
Prototype="long Excel_HPageBreaks_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_HPageBreaksAdd]
Class="Function"
Prototype="long Excel_HPageBreaksAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle before, CAObjHandle *returnValue);"

[Excel_VPageBreaksItem]
Class="Function"
Prototype="long Excel_VPageBreaksItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_VPageBreaks_Default]
Class="Function"
Prototype="long Excel_VPageBreaks_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_VPageBreaksAdd]
Class="Function"
Prototype="long Excel_VPageBreaksAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle before, CAObjHandle *returnValue);"

[Excel_RecentFileOpen]
Class="Function"
Prototype="long Excel_RecentFileOpen(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_RecentFileDelete]
Class="Function"
Prototype="long Excel_RecentFileDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_RecentFilesItem]
Class="Function"
Prototype="long Excel_RecentFilesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_RecentFiles_Default]
Class="Function"
Prototype="long Excel_RecentFiles_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_RecentFilesAdd]
Class="Function"
Prototype="long Excel_RecentFilesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, CAObjHandle *returnValue);"

[Excel_StyleDelete]
Class="Function"
Prototype="long Excel_StyleDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_StylesAdd]
Class="Function"
Prototype="long Excel_StylesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, struct tagVARIANT basedOn, CAObjHandle *returnValue);"

[Excel_StylesItem]
Class="Function"
Prototype="long Excel_StylesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_StylesMerge]
Class="Function"
Prototype="long Excel_StylesMerge(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT workbook, struct tagVARIANT *returnValue);"

[Excel_Styles_Default]
Class="Function"
Prototype="long Excel_Styles_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_BordersItem]
Class="Function"
Prototype="long Excel_BordersItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlBordersIndex index, CAObjHandle *returnValue);"

[Excel_Borders_Default]
Class="Function"
Prototype="long Excel_Borders_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlBordersIndex index, CAObjHandle *returnValue);"

[Excel_AddInsAdd]
Class="Function"
Prototype="long Excel_AddInsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT copyFile, CAObjHandle *returnValue);"

[Excel_AddInsItem]
Class="Function"
Prototype="long Excel_AddInsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_AddIns_Default]
Class="Function"
Prototype="long Excel_AddIns_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_AreasItem]
Class="Function"
Prototype="long Excel_AreasItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_Areas_Default]
Class="Function"
Prototype="long Excel_Areas_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_ChartsAdd]
Class="Function"
Prototype="long Excel_ChartsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after, struct tagVARIANT count, CAObjHandle *returnValue);"

[Excel_ChartsCopy]
Class="Function"
Prototype="long Excel_ChartsCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_ChartsDelete]
Class="Function"
Prototype="long Excel_ChartsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_Charts_Dummy7]
Class="Function"
Prototype="long Excel_Charts_Dummy7(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartsItem]
Class="Function"
Prototype="long Excel_ChartsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartsMove]
Class="Function"
Prototype="long Excel_ChartsMove(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_Charts_PrintOut]
Class="Function"
Prototype="long Excel_Charts_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_ChartsPrintPreview]
Class="Function"
Prototype="long Excel_ChartsPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_ChartsSelect]
Class="Function"
Prototype="long Excel_ChartsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_Charts_Default]
Class="Function"
Prototype="long Excel_Charts_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartsPrintOut]
Class="Function"
Prototype="long Excel_ChartsPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_PivotCacheRefresh]
Class="Function"
Prototype="long Excel_PivotCacheRefresh(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotCacheResetTimer]
Class="Function"
Prototype="long Excel_PivotCacheResetTimer(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotCacheCreatePivotTable]
Class="Function"
Prototype="long Excel_PivotCacheCreatePivotTable(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT tableDestination, struct tagVARIANT tableName, struct tagVARIANT readData, CAObjHandle *returnValue);"

[Excel_PivotCachesItem]
Class="Function"
Prototype="long Excel_PivotCachesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotCaches_Default]
Class="Function"
Prototype="long Excel_PivotCaches_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotCaches_NewEnum]
Class="Function"
Prototype="long Excel_PivotCaches_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PivotCachesAdd]
Class="Function"
Prototype="long Excel_PivotCachesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPivotTableSourceType sourceType, struct tagVARIANT sourceData, CAObjHandle *returnValue);"

[Excel_PivotFormulaDelete]
Class="Function"
Prototype="long Excel_PivotFormulaDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotFormulasAdd]
Class="Function"
Prototype="long Excel_PivotFormulasAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *formula, CAObjHandle *returnValue);"

[Excel_PivotFormulasItem]
Class="Function"
Prototype="long Excel_PivotFormulasItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotFormulas_Default]
Class="Function"
Prototype="long Excel_PivotFormulas_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotFormulas_NewEnum]
Class="Function"
Prototype="long Excel_PivotFormulas_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PivotTableAddFields]
Class="Function"
Prototype="long Excel_PivotTableAddFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowFields, struct tagVARIANT columnFields, struct tagVARIANT pageFields, struct tagVARIANT addToTable, struct tagVARIANT *returnValue);"

[Excel_PivotTableColumnFields]
Class="Function"
Prototype="long Excel_PivotTableColumnFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTableShowPages]
Class="Function"
Prototype="long Excel_PivotTableShowPages(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT pageField, struct tagVARIANT *returnValue);"

[Excel_PivotTableDataFields]
Class="Function"
Prototype="long Excel_PivotTableDataFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTableHiddenFields]
Class="Function"
Prototype="long Excel_PivotTableHiddenFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTablePageFields]
Class="Function"
Prototype="long Excel_PivotTablePageFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTablePivotFields]
Class="Function"
Prototype="long Excel_PivotTablePivotFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTableRefreshTable]
Class="Function"
Prototype="long Excel_PivotTableRefreshTable(CAObjHandle objectHandle, ERRORINFO *errorInfo, short *returnValue);"

[Excel_PivotTableRowFields]
Class="Function"
Prototype="long Excel_PivotTableRowFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTableVisibleFields]
Class="Function"
Prototype="long Excel_PivotTableVisibleFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTableCalculatedFields]
Class="Function"
Prototype="long Excel_PivotTableCalculatedFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_PivotTableGetData]
Class="Function"
Prototype="long Excel_PivotTableGetData(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, double *returnValue);"

[Excel_PivotTableListFormulas]
Class="Function"
Prototype="long Excel_PivotTableListFormulas(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotTablePivotCache]
Class="Function"
Prototype="long Excel_PivotTablePivotCache(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_PivotTablePivotTableWizard]
Class="Function"
Prototype="long Excel_PivotTablePivotTableWizard(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT sourceType, struct tagVARIANT sourceData, struct tagVARIANT tableDestination, struct tagVARIANT tableName, struct tagVARIANT rowGrand, struct tagVARIANT columnGrand, struct tagVARIANT saveData, struct tagVARIANT hasAutoFormat, struct tagVARIANT autoPage, struct tagVARIANT reserved, struct tagVARIANT backgroundQuery, struct tagVARIANT optimizeCache, struct tagVARIANT pageFieldOrder, struct tagVARIANT pageFieldWrapCount, struct tagVARIANT readData, struct tagVARIANT connection);"

[Excel_PivotTablePivotSelect]
Class="Function"
Prototype="long Excel_PivotTablePivotSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, enum ExcelEnum_XlPTSelectionMode mode);"

[Excel_PivotTableUpdate]
Class="Function"
Prototype="long Excel_PivotTableUpdate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotTableFormat]
Class="Function"
Prototype="long Excel_PivotTableFormat(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_xlPivotFormatType format);"

[Excel_PivotTablesItem]
Class="Function"
Prototype="long Excel_PivotTablesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotTables_NewEnum]
Class="Function"
Prototype="long Excel_PivotTables_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PivotTablesAdd]
Class="Function"
Prototype="long Excel_PivotTablesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle pivotCache, struct tagVARIANT tableDestination, struct tagVARIANT tableName, struct tagVARIANT readData, CAObjHandle *returnValue);"

[Excel_PivotFieldChildItems]
Class="Function"
Prototype="long Excel_PivotFieldChildItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldHiddenItems]
Class="Function"
Prototype="long Excel_PivotFieldHiddenItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldParentItems]
Class="Function"
Prototype="long Excel_PivotFieldParentItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldPivotItems]
Class="Function"
Prototype="long Excel_PivotFieldPivotItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldGetSubtotals]
Class="Function"
Prototype="long Excel_PivotFieldGetSubtotals(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldSetSubtotals]
Class="Function"
Prototype="long Excel_PivotFieldSetSubtotals(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT newValue);"

[Excel_PivotFieldVisibleItems]
Class="Function"
Prototype="long Excel_PivotFieldVisibleItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotFieldCalculatedItems]
Class="Function"
Prototype="long Excel_PivotFieldCalculatedItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_PivotFieldDelete]
Class="Function"
Prototype="long Excel_PivotFieldDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotFieldAutoSort]
Class="Function"
Prototype="long Excel_PivotFieldAutoSort(CAObjHandle objectHandle, ERRORINFO *errorInfo, long order, const char *field);"

[Excel_PivotFieldAutoShow]
Class="Function"
Prototype="long Excel_PivotFieldAutoShow(CAObjHandle objectHandle, ERRORINFO *errorInfo, long type, long range, long count, const char *field);"

[Excel_PivotFieldsItem]
Class="Function"
Prototype="long Excel_PivotFieldsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotFields_NewEnum]
Class="Function"
Prototype="long Excel_PivotFields_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_CalculatedFieldsAdd]
Class="Function"
Prototype="long Excel_CalculatedFieldsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, const char *formula, CAObjHandle *returnValue);"

[Excel_CalculatedFieldsItem]
Class="Function"
Prototype="long Excel_CalculatedFieldsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_CalculatedFields_Default]
Class="Function"
Prototype="long Excel_CalculatedFields_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT field, CAObjHandle *returnValue);"

[Excel_CalculatedFields_NewEnum]
Class="Function"
Prototype="long Excel_CalculatedFields_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PivotItemChildItems]
Class="Function"
Prototype="long Excel_PivotItemChildItems(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PivotItemDelete]
Class="Function"
Prototype="long Excel_PivotItemDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PivotItemsAdd]
Class="Function"
Prototype="long Excel_PivotItemsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name);"

[Excel_PivotItemsItem]
Class="Function"
Prototype="long Excel_PivotItemsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotItems_NewEnum]
Class="Function"
Prototype="long Excel_PivotItems_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_CalculatedItemsAdd]
Class="Function"
Prototype="long Excel_CalculatedItemsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, const char *formula, CAObjHandle *returnValue);"

[Excel_CalculatedItemsItem]
Class="Function"
Prototype="long Excel_CalculatedItemsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_CalculatedItems_Default]
Class="Function"
Prototype="long Excel_CalculatedItems_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT field, CAObjHandle *returnValue);"

[Excel_CalculatedItems_NewEnum]
Class="Function"
Prototype="long Excel_CalculatedItems_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_CharactersDelete]
Class="Function"
Prototype="long Excel_CharactersDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_CharactersInsert]
Class="Function"
Prototype="long Excel_CharactersInsert(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *string, struct tagVARIANT *returnValue);"

[Excel_DialogsItem]
Class="Function"
Prototype="long Excel_DialogsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlBuiltInDialog index, CAObjHandle *returnValue);"

[Excel_Dialogs_Default]
Class="Function"
Prototype="long Excel_Dialogs_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlBuiltInDialog index, CAObjHandle *returnValue);"

[Excel_DialogShow]
Class="Function"
Prototype="long Excel_DialogShow(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT arg1, struct tagVARIANT arg2, struct tagVARIANT arg3, struct tagVARIANT arg4, struct tagVARIANT arg5, struct tagVARIANT arg6, struct tagVARIANT arg7, struct tagVARIANT arg8, struct tagVARIANT arg9, struct tagVARIANT arg10, struct tagVARIANT arg11, struct tagVARIANT arg12, struct tagVARIANT arg13, struct tagVARIANT arg14, struct tagVARIANT arg15, struct tagVARIANT arg16, struct tagVARIANT arg17, struct tagVARIANT arg18, struct tagVARIANT arg19, struct tagVARIANT arg20, struct tagVARIANT arg21, struct tagVARIANT arg22, struct tagVARIANT arg23, struct tagVARIANT arg24, struct tagVARIANT arg25, struct tagVARIANT arg26, struct tagVARIANT arg27, struct tagVARIANT arg28, struct tagVARIANT arg29, struct tagVARIANT arg30, short *returnValue);"

[Excel_SoundNoteDelete]
Class="Function"
Prototype="long Excel_SoundNoteDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SoundNoteImport]
Class="Function"
Prototype="long Excel_SoundNoteImport(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, struct tagVARIANT *returnValue);"

[Excel_SoundNotePlay]
Class="Function"
Prototype="long Excel_SoundNotePlay(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SoundNoteRecord]
Class="Function"
Prototype="long Excel_SoundNoteRecord(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PanesItem]
Class="Function"
Prototype="long Excel_PanesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_Panes_Default]
Class="Function"
Prototype="long Excel_Panes_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_PaneActivate]
Class="Function"
Prototype="long Excel_PaneActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo, short *returnValue);"

[Excel_PaneLargeScroll]
Class="Function"
Prototype="long Excel_PaneLargeScroll(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT down, struct tagVARIANT up, struct tagVARIANT toRight, struct tagVARIANT toLeft, struct tagVARIANT *returnValue);"

[Excel_PaneSmallScroll]
Class="Function"
Prototype="long Excel_PaneSmallScroll(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT down, struct tagVARIANT up, struct tagVARIANT toRight, struct tagVARIANT toLeft, struct tagVARIANT *returnValue);"

[Excel_PaneScrollIntoView]
Class="Function"
Prototype="long Excel_PaneScrollIntoView(CAObjHandle objectHandle, ERRORINFO *errorInfo, long left, long top, long width, long height, struct tagVARIANT start);"

[Excel_ScenariosAdd]
Class="Function"
Prototype="long Excel_ScenariosAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, struct tagVARIANT changingCells, struct tagVARIANT values, struct tagVARIANT comment, struct tagVARIANT locked, struct tagVARIANT hidden, CAObjHandle *returnValue);"

[Excel_ScenariosCreateSummary]
Class="Function"
Prototype="long Excel_ScenariosCreateSummary(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlSummaryReportType reportType, struct tagVARIANT resultCells, struct tagVARIANT *returnValue);"

[Excel_ScenariosItem]
Class="Function"
Prototype="long Excel_ScenariosItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ScenariosMerge]
Class="Function"
Prototype="long Excel_ScenariosMerge(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT source, struct tagVARIANT *returnValue);"

[Excel_Scenarios_NewEnum]
Class="Function"
Prototype="long Excel_Scenarios_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_ScenarioChangeScenario]
Class="Function"
Prototype="long Excel_ScenarioChangeScenario(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT changingCells, struct tagVARIANT values, struct tagVARIANT *returnValue);"

[Excel_ScenarioDelete]
Class="Function"
Prototype="long Excel_ScenarioDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ScenarioShow]
Class="Function"
Prototype="long Excel_ScenarioShow(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ScenarioValues]
Class="Function"
Prototype="long Excel_ScenarioValues(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_OLEObjects_Dummy3]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy3(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjectsBringToFront]
Class="Function"
Prototype="long Excel_OLEObjectsBringToFront(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsCopy]
Class="Function"
Prototype="long Excel_OLEObjectsCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsCopyPicture]
Class="Function"
Prototype="long Excel_OLEObjectsCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsCut]
Class="Function"
Prototype="long Excel_OLEObjectsCut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsDelete]
Class="Function"
Prototype="long Excel_OLEObjectsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsDuplicate]
Class="Function"
Prototype="long Excel_OLEObjectsDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_OLEObjects_Dummy12]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy12(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy15]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy15(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjectsSelect]
Class="Function"
Prototype="long Excel_OLEObjectsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace, struct tagVARIANT *returnValue);"

[Excel_OLEObjectsSendToBack]
Class="Function"
Prototype="long Excel_OLEObjectsSendToBack(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OLEObjects_Dummy22]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy22(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy30]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy30(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy32]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy32(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy33]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy33(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy34]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy34(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy36]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy36(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy37]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy37(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy38]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy38(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy39]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy39(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy40]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy40(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjects_Dummy41]
Class="Function"
Prototype="long Excel_OLEObjects_Dummy41(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEObjectsAdd]
Class="Function"
Prototype="long Excel_OLEObjectsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT classType, struct tagVARIANT filename, struct tagVARIANT link, struct tagVARIANT displayAsIcon, struct tagVARIANT iconFileName, struct tagVARIANT iconIndex, struct tagVARIANT iconLabel, struct tagVARIANT left, struct tagVARIANT top, struct tagVARIANT width, struct tagVARIANT height, CAObjHandle *returnValue);"

[Excel_OLEObjectsGroup]
Class="Function"
Prototype="long Excel_OLEObjectsGroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_OLEObjectsItem]
Class="Function"
Prototype="long Excel_OLEObjectsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_OLEObjects_NewEnum]
Class="Function"
Prototype="long Excel_OLEObjects_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_RoutingSlipGetRecipients]
Class="Function"
Prototype="long Excel_RoutingSlipGetRecipients(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_RoutingSlipSetRecipients]
Class="Function"
Prototype="long Excel_RoutingSlipSetRecipients(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT newValue);"

[Excel_RoutingSlipReset]
Class="Function"
Prototype="long Excel_RoutingSlipReset(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_OutlineShowLevels]
Class="Function"
Prototype="long Excel_OutlineShowLevels(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowLevels, struct tagVARIANT columnLevels, struct tagVARIANT *returnValue);"

[Excel_WorksheetsAdd]
Class="Function"
Prototype="long Excel_WorksheetsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after, struct tagVARIANT count, struct tagVARIANT type, CAObjHandle *returnValue);"

[Excel_WorksheetsCopy]
Class="Function"
Prototype="long Excel_WorksheetsCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_WorksheetsDelete]
Class="Function"
Prototype="long Excel_WorksheetsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WorksheetsFillAcrossSheets]
Class="Function"
Prototype="long Excel_WorksheetsFillAcrossSheets(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle range, enum ExcelEnum_XlFillWith type);"

[Excel_WorksheetsItem]
Class="Function"
Prototype="long Excel_WorksheetsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetsMove]
Class="Function"
Prototype="long Excel_WorksheetsMove(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT before, struct tagVARIANT after);"

[Excel_Worksheets_PrintOut]
Class="Function"
Prototype="long Excel_Worksheets_PrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate);"

[Excel_WorksheetsPrintPreview]
Class="Function"
Prototype="long Excel_WorksheetsPrintPreview(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT enableChanges);"

[Excel_WorksheetsSelect]
Class="Function"
Prototype="long Excel_WorksheetsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_Worksheets_Default]
Class="Function"
Prototype="long Excel_Worksheets_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_WorksheetsPrintOut]
Class="Function"
Prototype="long Excel_WorksheetsPrintOut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT from, struct tagVARIANT to, struct tagVARIANT copies, struct tagVARIANT preview, struct tagVARIANT activePrinter, struct tagVARIANT printToFile, struct tagVARIANT collate, struct tagVARIANT prToFileName);"

[Excel_PageSetupGetPrintQuality]
Class="Function"
Prototype="long Excel_PageSetupGetPrintQuality(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_PageSetupSetPrintQuality]
Class="Function"
Prototype="long Excel_PageSetupSetPrintQuality(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT newValue);"

[Excel_NamesAdd]
Class="Function"
Prototype="long Excel_NamesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT name, struct tagVARIANT refersTo, struct tagVARIANT visible, struct tagVARIANT macroType, struct tagVARIANT shortcutKey, struct tagVARIANT category, struct tagVARIANT nameLocal, struct tagVARIANT refersToLocal, struct tagVARIANT categoryLocal, struct tagVARIANT refersToR1C1, struct tagVARIANT refersToR1C1Local, CAObjHandle *returnValue);"

[Excel_NamesItem]
Class="Function"
Prototype="long Excel_NamesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT indexLocal, struct tagVARIANT refersTo, CAObjHandle *returnValue);"

[Excel_Names_Default]
Class="Function"
Prototype="long Excel_Names_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT indexLocal, struct tagVARIANT refersTo, CAObjHandle *returnValue);"

[Excel_NameDelete]
Class="Function"
Prototype="long Excel_NameDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjectBringToFront]
Class="Function"
Prototype="long Excel_ChartObjectBringToFront(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectCopy]
Class="Function"
Prototype="long Excel_ChartObjectCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectCopyPicture]
Class="Function"
Prototype="long Excel_ChartObjectCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, struct tagVARIANT *returnValue);"

[Excel_ChartObjectCut]
Class="Function"
Prototype="long Excel_ChartObjectCut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectDelete]
Class="Function"
Prototype="long Excel_ChartObjectDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectDuplicate]
Class="Function"
Prototype="long Excel_ChartObjectDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ChartObjectSelect]
Class="Function"
Prototype="long Excel_ChartObjectSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace, struct tagVARIANT *returnValue);"

[Excel_ChartObjectSendToBack]
Class="Function"
Prototype="long Excel_ChartObjectSendToBack(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectActivate]
Class="Function"
Prototype="long Excel_ChartObjectActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjects_Dummy3]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy3(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjectsBringToFront]
Class="Function"
Prototype="long Excel_ChartObjectsBringToFront(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsCopy]
Class="Function"
Prototype="long Excel_ChartObjectsCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsCopyPicture]
Class="Function"
Prototype="long Excel_ChartObjectsCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlPictureAppearance appearance, enum ExcelEnum_XlCopyPictureFormat format, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsCut]
Class="Function"
Prototype="long Excel_ChartObjectsCut(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsDelete]
Class="Function"
Prototype="long Excel_ChartObjectsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsDuplicate]
Class="Function"
Prototype="long Excel_ChartObjectsDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ChartObjects_Dummy12]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy12(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjects_Dummy15]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy15(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjectsSelect]
Class="Function"
Prototype="long Excel_ChartObjectsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace, struct tagVARIANT *returnValue);"

[Excel_ChartObjectsSendToBack]
Class="Function"
Prototype="long Excel_ChartObjectsSendToBack(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartObjects_Dummy22]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy22(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjects_Dummy25]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy25(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjects_Dummy27]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy27(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjects_Dummy28]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy28(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjects_Dummy29]
Class="Function"
Prototype="long Excel_ChartObjects_Dummy29(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartObjectsAdd]
Class="Function"
Prototype="long Excel_ChartObjectsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, double left, double top, double width, double height, CAObjHandle *returnValue);"

[Excel_ChartObjectsGroup]
Class="Function"
Prototype="long Excel_ChartObjectsGroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ChartObjectsItem]
Class="Function"
Prototype="long Excel_ChartObjectsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartObjects_NewEnum]
Class="Function"
Prototype="long Excel_ChartObjects_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_CustomViewsItem]
Class="Function"
Prototype="long Excel_CustomViewsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT viewName, CAObjHandle *returnValue);"

[Excel_CustomViewsAdd]
Class="Function"
Prototype="long Excel_CustomViewsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *viewName, struct tagVARIANT printSettings, struct tagVARIANT rowColSettings, CAObjHandle *returnValue);"

[Excel_CustomViews_Default]
Class="Function"
Prototype="long Excel_CustomViews_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT viewName, CAObjHandle *returnValue);"

[Excel_CustomViewShow]
Class="Function"
Prototype="long Excel_CustomViewShow(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_CustomViewDelete]
Class="Function"
Prototype="long Excel_CustomViewDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_FormatConditionsItem]
Class="Function"
Prototype="long Excel_FormatConditionsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_FormatConditionsAdd]
Class="Function"
Prototype="long Excel_FormatConditionsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlFormatConditionType type, struct tagVARIANT operator, struct tagVARIANT formula1, struct tagVARIANT formula2, CAObjHandle *returnValue);"

[Excel_FormatConditions_Default]
Class="Function"
Prototype="long Excel_FormatConditions_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_FormatConditionsDelete]
Class="Function"
Prototype="long Excel_FormatConditionsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_FormatConditionModify]
Class="Function"
Prototype="long Excel_FormatConditionModify(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlFormatConditionType type, struct tagVARIANT operator, struct tagVARIANT formula1, struct tagVARIANT formula2);"

[Excel_FormatConditionDelete]
Class="Function"
Prototype="long Excel_FormatConditionDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_CommentsItem]
Class="Function"
Prototype="long Excel_CommentsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_Comments_Default]
Class="Function"
Prototype="long Excel_Comments_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_CommentText]
Class="Function"
Prototype="long Excel_CommentText(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT text, struct tagVARIANT start, struct tagVARIANT overwrite, char **returnValue);"

[Excel_CommentDelete]
Class="Function"
Prototype="long Excel_CommentDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_CommentNext]
Class="Function"
Prototype="long Excel_CommentNext(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_CommentPrevious]
Class="Function"
Prototype="long Excel_CommentPrevious(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_QueryTablesAdd]
Class="Function"
Prototype="long Excel_QueryTablesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT connection, CAObjHandle destination, struct tagVARIANT sql, CAObjHandle *returnValue);"

[Excel_QueryTablesItem]
Class="Function"
Prototype="long Excel_QueryTablesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_QueryTables_Default]
Class="Function"
Prototype="long Excel_QueryTables_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_QueryTables_NewEnum]
Class="Function"
Prototype="long Excel_QueryTables_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_ParameterSetParam]
Class="Function"
Prototype="long Excel_ParameterSetParam(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlParameterType type, struct tagVARIANT value);"

[Excel_ParametersAdd]
Class="Function"
Prototype="long Excel_ParametersAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *name, struct tagVARIANT iDataType, CAObjHandle *returnValue);"

[Excel_ParametersItem]
Class="Function"
Prototype="long Excel_ParametersItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_Parameters_Default]
Class="Function"
Prototype="long Excel_Parameters_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ParametersDelete]
Class="Function"
Prototype="long Excel_ParametersDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_Parameters_NewEnum]
Class="Function"
Prototype="long Excel_Parameters_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_ODBCErrorsItem]
Class="Function"
Prototype="long Excel_ODBCErrorsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_ODBCErrors_Default]
Class="Function"
Prototype="long Excel_ODBCErrors_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_ODBCErrors_NewEnum]
Class="Function"
Prototype="long Excel_ODBCErrors_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_ValidationAdd]
Class="Function"
Prototype="long Excel_ValidationAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDVType type, struct tagVARIANT alertStyle, struct tagVARIANT operator, struct tagVARIANT formula1, struct tagVARIANT formula2);"

[Excel_ValidationDelete]
Class="Function"
Prototype="long Excel_ValidationDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ValidationModify]
Class="Function"
Prototype="long Excel_ValidationModify(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT type, struct tagVARIANT alertStyle, struct tagVARIANT operator, struct tagVARIANT formula1, struct tagVARIANT formula2);"

[Excel_HyperlinksAdd]
Class="Function"
Prototype="long Excel_HyperlinksAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle anchor, const char *address, struct tagVARIANT subAddress, struct tagVARIANT screenTip, struct tagVARIANT textToDisplay, CAObjHandle *returnValue);"

[Excel_HyperlinksItem]
Class="Function"
Prototype="long Excel_HyperlinksItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_Hyperlinks_Default]
Class="Function"
Prototype="long Excel_Hyperlinks_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_HyperlinksDelete]
Class="Function"
Prototype="long Excel_HyperlinksDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_HyperlinkAddToFavorites]
Class="Function"
Prototype="long Excel_HyperlinkAddToFavorites(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_HyperlinkDelete]
Class="Function"
Prototype="long Excel_HyperlinkDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_HyperlinkFollow]
Class="Function"
Prototype="long Excel_HyperlinkFollow(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT newWindow, struct tagVARIANT addHistory, struct tagVARIANT extraInfo, struct tagVARIANT method, struct tagVARIANT headerInfo);"

[Excel_HyperlinkCreateNewDocument]
Class="Function"
Prototype="long Excel_HyperlinkCreateNewDocument(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, short editNow, short overwrite);"

[Excel_Filters_Default]
Class="Function"
Prototype="long Excel_Filters_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_FiltersItem]
Class="Function"
Prototype="long Excel_FiltersItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_AutoCorrectAddReplacement]
Class="Function"
Prototype="long Excel_AutoCorrectAddReplacement(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *what, const char *replacement, struct tagVARIANT *returnValue);"

[Excel_AutoCorrectDeleteReplacement]
Class="Function"
Prototype="long Excel_AutoCorrectDeleteReplacement(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *what, struct tagVARIANT *returnValue);"

[Excel_AutoCorrectGetReplacementList]
Class="Function"
Prototype="long Excel_AutoCorrectGetReplacementList(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_AutoCorrectSetReplacementList]
Class="Function"
Prototype="long Excel_AutoCorrectSetReplacementList(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT newValue);"

[Excel_ChartFillFormatOneColorGradient]
Class="Function"
Prototype="long Excel_ChartFillFormatOneColorGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant, float degree);"

[Excel_ChartFillFormatTwoColorGradient]
Class="Function"
Prototype="long Excel_ChartFillFormatTwoColorGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant);"

[Excel_ChartFillFormatPresetTextured]
Class="Function"
Prototype="long Excel_ChartFillFormatPresetTextured(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPresetTexture presetTexture);"

[Excel_ChartFillFormatSolid]
Class="Function"
Prototype="long Excel_ChartFillFormatSolid(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ChartFillFormatPatterned]
Class="Function"
Prototype="long Excel_ChartFillFormatPatterned(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPatternType pattern);"

[Excel_ChartFillFormatUserPicture]
Class="Function"
Prototype="long Excel_ChartFillFormatUserPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT pictureFile, struct tagVARIANT pictureFormat, struct tagVARIANT pictureStackUnit, struct tagVARIANT picturePlacement);"

[Excel_ChartFillFormatUserTextured]
Class="Function"
Prototype="long Excel_ChartFillFormatUserTextured(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *textureFile);"

[Excel_ChartFillFormatPresetGradient]
Class="Function"
Prototype="long Excel_ChartFillFormatPresetGradient(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoGradientStyle style, long variant, enum ExcelEnum_MsoPresetGradientType presetGradientType);"

[Excel_AxisDelete]
Class="Function"
Prototype="long Excel_AxisDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_AxisSelect]
Class="Function"
Prototype="long Excel_AxisSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartTitleSelect]
Class="Function"
Prototype="long Excel_ChartTitleSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartTitleDelete]
Class="Function"
Prototype="long Excel_ChartTitleDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartTitleCharacters]
Class="Function"
Prototype="long Excel_ChartTitleCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_AxisTitleSelect]
Class="Function"
Prototype="long Excel_AxisTitleSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_AxisTitleDelete]
Class="Function"
Prototype="long Excel_AxisTitleDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_AxisTitleCharacters]
Class="Function"
Prototype="long Excel_AxisTitleCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_ChartGroupSeriesCollection]
Class="Function"
Prototype="long Excel_ChartGroupSeriesCollection(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartGroupsItem]
Class="Function"
Prototype="long Excel_ChartGroupsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ChartGroups_NewEnum]
Class="Function"
Prototype="long Excel_ChartGroups_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_AxesItem]
Class="Function"
Prototype="long Excel_AxesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlAxisType type, enum ExcelEnum_XlAxisGroup axisGroup, CAObjHandle *returnValue);"

[Excel_Axes_NewEnum]
Class="Function"
Prototype="long Excel_Axes_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PointsItem]
Class="Function"
Prototype="long Excel_PointsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_Points_NewEnum]
Class="Function"
Prototype="long Excel_Points_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PointApplyDataLabels]
Class="Function"
Prototype="long Excel_PointApplyDataLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDataLabelsType type, struct tagVARIANT legendKey, struct tagVARIANT autoText, struct tagVARIANT *returnValue);"

[Excel_PointClearFormats]
Class="Function"
Prototype="long Excel_PointClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PointCopy]
Class="Function"
Prototype="long Excel_PointCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PointDelete]
Class="Function"
Prototype="long Excel_PointDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PointPaste]
Class="Function"
Prototype="long Excel_PointPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PointSelect]
Class="Function"
Prototype="long Excel_PointSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesApplyDataLabels]
Class="Function"
Prototype="long Excel_SeriesApplyDataLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlDataLabelsType type, struct tagVARIANT legendKey, struct tagVARIANT autoText, struct tagVARIANT hasLeaderLines, struct tagVARIANT *returnValue);"

[Excel_SeriesClearFormats]
Class="Function"
Prototype="long Excel_SeriesClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesCopy]
Class="Function"
Prototype="long Excel_SeriesCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesDataLabels]
Class="Function"
Prototype="long Excel_SeriesDataLabels(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SeriesDelete]
Class="Function"
Prototype="long Excel_SeriesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesErrorBar]
Class="Function"
Prototype="long Excel_SeriesErrorBar(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlErrorBarDirection direction, enum ExcelEnum_XlErrorBarInclude include, enum ExcelEnum_XlErrorBarType type, struct tagVARIANT amount, struct tagVARIANT minusValues, struct tagVARIANT *returnValue);"

[Excel_SeriesPaste]
Class="Function"
Prototype="long Excel_SeriesPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesPoints]
Class="Function"
Prototype="long Excel_SeriesPoints(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SeriesSelect]
Class="Function"
Prototype="long Excel_SeriesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesTrendlines]
Class="Function"
Prototype="long Excel_SeriesTrendlines(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SeriesApplyCustomType]
Class="Function"
Prototype="long Excel_SeriesApplyCustomType(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlChartType chartType);"

[Excel_SeriesCollectionAdd]
Class="Function"
Prototype="long Excel_SeriesCollectionAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT source, enum ExcelEnum_XlRowCol rowcol, struct tagVARIANT seriesLabels, struct tagVARIANT categoryLabels, struct tagVARIANT replace, CAObjHandle *returnValue);"

[Excel_SeriesCollectionExtend]
Class="Function"
Prototype="long Excel_SeriesCollectionExtend(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT source, struct tagVARIANT rowcol, struct tagVARIANT categoryLabels, struct tagVARIANT *returnValue);"

[Excel_SeriesCollectionItem]
Class="Function"
Prototype="long Excel_SeriesCollectionItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_SeriesCollection_NewEnum]
Class="Function"
Prototype="long Excel_SeriesCollection_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_SeriesCollectionPaste]
Class="Function"
Prototype="long Excel_SeriesCollectionPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlRowCol rowcol, struct tagVARIANT seriesLabels, struct tagVARIANT categoryLabels, struct tagVARIANT replace, struct tagVARIANT newSeries, struct tagVARIANT *returnValue);"

[Excel_SeriesCollectionNewSeries]
Class="Function"
Prototype="long Excel_SeriesCollectionNewSeries(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_DataLabelSelect]
Class="Function"
Prototype="long Excel_DataLabelSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DataLabelDelete]
Class="Function"
Prototype="long Excel_DataLabelDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DataLabelCharacters]
Class="Function"
Prototype="long Excel_DataLabelCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_DataLabelsSelect]
Class="Function"
Prototype="long Excel_DataLabelsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DataLabelsDelete]
Class="Function"
Prototype="long Excel_DataLabelsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DataLabels_Dummy9]
Class="Function"
Prototype="long Excel_DataLabels_Dummy9(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataLabels_Dummy10]
Class="Function"
Prototype="long Excel_DataLabels_Dummy10(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataLabels_Dummy13]
Class="Function"
Prototype="long Excel_DataLabels_Dummy13(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataLabels_Dummy16]
Class="Function"
Prototype="long Excel_DataLabels_Dummy16(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataLabels_Dummy17]
Class="Function"
Prototype="long Excel_DataLabels_Dummy17(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataLabelsItem]
Class="Function"
Prototype="long Excel_DataLabelsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_DataLabels_NewEnum]
Class="Function"
Prototype="long Excel_DataLabels_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_LegendEntryDelete]
Class="Function"
Prototype="long Excel_LegendEntryDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendEntrySelect]
Class="Function"
Prototype="long Excel_LegendEntrySelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendEntriesItem]
Class="Function"
Prototype="long Excel_LegendEntriesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_LegendEntries_NewEnum]
Class="Function"
Prototype="long Excel_LegendEntries_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_LegendKeyClearFormats]
Class="Function"
Prototype="long Excel_LegendKeyClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendKeyDelete]
Class="Function"
Prototype="long Excel_LegendKeyDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendKeySelect]
Class="Function"
Prototype="long Excel_LegendKeySelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_TrendlinesAdd]
Class="Function"
Prototype="long Excel_TrendlinesAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlTrendlineType type, struct tagVARIANT order, struct tagVARIANT period, struct tagVARIANT forward, struct tagVARIANT backward, struct tagVARIANT intercept, struct tagVARIANT displayEquation, struct tagVARIANT displayRSquared, struct tagVARIANT name, CAObjHandle *returnValue);"

[Excel_TrendlinesItem]
Class="Function"
Prototype="long Excel_TrendlinesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_Trendlines_NewEnum]
Class="Function"
Prototype="long Excel_Trendlines_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_TrendlineClearFormats]
Class="Function"
Prototype="long Excel_TrendlineClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_TrendlineDelete]
Class="Function"
Prototype="long Excel_TrendlineDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_TrendlineSelect]
Class="Function"
Prototype="long Excel_TrendlineSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_CornersSelect]
Class="Function"
Prototype="long Excel_CornersSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesLinesSelect]
Class="Function"
Prototype="long Excel_SeriesLinesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_SeriesLinesDelete]
Class="Function"
Prototype="long Excel_SeriesLinesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_HiLoLinesSelect]
Class="Function"
Prototype="long Excel_HiLoLinesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_HiLoLinesDelete]
Class="Function"
Prototype="long Excel_HiLoLinesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_GridlinesSelect]
Class="Function"
Prototype="long Excel_GridlinesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_GridlinesDelete]
Class="Function"
Prototype="long Excel_GridlinesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DropLinesSelect]
Class="Function"
Prototype="long Excel_DropLinesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DropLinesDelete]
Class="Function"
Prototype="long Excel_DropLinesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LeaderLinesDelete]
Class="Function"
Prototype="long Excel_LeaderLinesDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_LeaderLinesSelect]
Class="Function"
Prototype="long Excel_LeaderLinesSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_UpBarsSelect]
Class="Function"
Prototype="long Excel_UpBarsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_UpBarsDelete]
Class="Function"
Prototype="long Excel_UpBarsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DownBarsSelect]
Class="Function"
Prototype="long Excel_DownBarsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DownBarsDelete]
Class="Function"
Prototype="long Excel_DownBarsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_FloorSelect]
Class="Function"
Prototype="long Excel_FloorSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_FloorClearFormats]
Class="Function"
Prototype="long Excel_FloorClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_FloorPaste]
Class="Function"
Prototype="long Excel_FloorPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_WallsSelect]
Class="Function"
Prototype="long Excel_WallsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_WallsClearFormats]
Class="Function"
Prototype="long Excel_WallsClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_WallsPaste]
Class="Function"
Prototype="long Excel_WallsPaste(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_TickLabelsDelete]
Class="Function"
Prototype="long Excel_TickLabelsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_TickLabelsSelect]
Class="Function"
Prototype="long Excel_TickLabelsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PlotAreaSelect]
Class="Function"
Prototype="long Excel_PlotAreaSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_PlotAreaClearFormats]
Class="Function"
Prototype="long Excel_PlotAreaClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartAreaSelect]
Class="Function"
Prototype="long Excel_ChartAreaSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartAreaClear]
Class="Function"
Prototype="long Excel_ChartAreaClear(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartAreaClearContents]
Class="Function"
Prototype="long Excel_ChartAreaClearContents(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartAreaCopy]
Class="Function"
Prototype="long Excel_ChartAreaCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ChartAreaClearFormats]
Class="Function"
Prototype="long Excel_ChartAreaClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendSelect]
Class="Function"
Prototype="long Excel_LegendSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendDelete]
Class="Function"
Prototype="long Excel_LegendDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_LegendLegendEntries]
Class="Function"
Prototype="long Excel_LegendLegendEntries(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_LegendClear]
Class="Function"
Prototype="long Excel_LegendClear(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ErrorBarsSelect]
Class="Function"
Prototype="long Excel_ErrorBarsSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ErrorBarsDelete]
Class="Function"
Prototype="long Excel_ErrorBarsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_ErrorBarsClearFormats]
Class="Function"
Prototype="long Excel_ErrorBarsClearFormats(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DataTableSelect]
Class="Function"
Prototype="long Excel_DataTableSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_DataTableDelete]
Class="Function"
Prototype="long Excel_DataTableDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeApply]
Class="Function"
Prototype="long Excel_ShapeApply(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeDelete]
Class="Function"
Prototype="long Excel_ShapeDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeDuplicate]
Class="Function"
Prototype="long Excel_ShapeDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeFlip]
Class="Function"
Prototype="long Excel_ShapeFlip(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoFlipCmd flipCmd);"

[Excel_ShapeIncrementLeft]
Class="Function"
Prototype="long Excel_ShapeIncrementLeft(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapeIncrementRotation]
Class="Function"
Prototype="long Excel_ShapeIncrementRotation(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapeIncrementTop]
Class="Function"
Prototype="long Excel_ShapeIncrementTop(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapePickUp]
Class="Function"
Prototype="long Excel_ShapePickUp(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRerouteConnections]
Class="Function"
Prototype="long Excel_ShapeRerouteConnections(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeScaleHeight]
Class="Function"
Prototype="long Excel_ShapeScaleHeight(CAObjHandle objectHandle, ERRORINFO *errorInfo, float factor, enum ExcelEnum_MsoTriState relativeToOriginalSize, struct tagVARIANT scale);"

[Excel_ShapeScaleWidth]
Class="Function"
Prototype="long Excel_ShapeScaleWidth(CAObjHandle objectHandle, ERRORINFO *errorInfo, float factor, enum ExcelEnum_MsoTriState relativeToOriginalSize, struct tagVARIANT scale);"

[Excel_ShapeSelect]
Class="Function"
Prototype="long Excel_ShapeSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_ShapeSetShapesDefaultProperties]
Class="Function"
Prototype="long Excel_ShapeSetShapesDefaultProperties(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeUngroup]
Class="Function"
Prototype="long Excel_ShapeUngroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeZOrder]
Class="Function"
Prototype="long Excel_ShapeZOrder(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoZOrderCmd ZOrderCmd);"

[Excel_ShapeCopy]
Class="Function"
Prototype="long Excel_ShapeCopy(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeCut]
Class="Function"
Prototype="long Excel_ShapeCut(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeCopyPicture]
Class="Function"
Prototype="long Excel_ShapeCopyPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT appearance, struct tagVARIANT format);"

[Excel_ShapesItem]
Class="Function"
Prototype="long Excel_ShapesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_Shapes_Default]
Class="Function"
Prototype="long Excel_Shapes_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ShapesAddCallout]
Class="Function"
Prototype="long Excel_ShapesAddCallout(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoCalloutType type, float left, float top, float width, float height, CAObjHandle *returnValue);"

[Excel_ShapesAddConnector]
Class="Function"
Prototype="long Excel_ShapesAddConnector(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoConnectorType type, float beginX, float beginY, float endX, float endY, CAObjHandle *returnValue);"

[Excel_ShapesAddCurve]
Class="Function"
Prototype="long Excel_ShapesAddCurve(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT safeArrayOfPoints, CAObjHandle *returnValue);"

[Excel_ShapesAddLabel]
Class="Function"
Prototype="long Excel_ShapesAddLabel(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoTextOrientation orientation, float left, float top, float width, float height, CAObjHandle *returnValue);"

[Excel_ShapesAddLine]
Class="Function"
Prototype="long Excel_ShapesAddLine(CAObjHandle objectHandle, ERRORINFO *errorInfo, float beginX, float beginY, float endX, float endY, CAObjHandle *returnValue);"

[Excel_ShapesAddPicture]
Class="Function"
Prototype="long Excel_ShapesAddPicture(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *filename, enum ExcelEnum_MsoTriState linkToFile, enum ExcelEnum_MsoTriState saveWithDocument, float left, float top, float width, float height, CAObjHandle *returnValue);"

[Excel_ShapesAddPolyline]
Class="Function"
Prototype="long Excel_ShapesAddPolyline(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT safeArrayOfPoints, CAObjHandle *returnValue);"

[Excel_ShapesAddShape]
Class="Function"
Prototype="long Excel_ShapesAddShape(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoAutoShapeType type, float left, float top, float width, float height, CAObjHandle *returnValue);"

[Excel_ShapesAddTextEffect]
Class="Function"
Prototype="long Excel_ShapesAddTextEffect(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoPresetTextEffect presetTextEffect, const char *text, const char *fontName, float fontSize, enum ExcelEnum_MsoTriState fontBold, enum ExcelEnum_MsoTriState fontItalic, float left, float top, CAObjHandle *returnValue);"

[Excel_ShapesAddTextbox]
Class="Function"
Prototype="long Excel_ShapesAddTextbox(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoTextOrientation orientation, float left, float top, float width, float height, CAObjHandle *returnValue);"

[Excel_ShapesBuildFreeform]
Class="Function"
Prototype="long Excel_ShapesBuildFreeform(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoEditingType editingType, float x1, float y1, CAObjHandle *returnValue);"

[Excel_ShapesRange]
Class="Function"
Prototype="long Excel_ShapesRange(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ShapesSelectAll]
Class="Function"
Prototype="long Excel_ShapesSelectAll(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapesAddFormControl]
Class="Function"
Prototype="long Excel_ShapesAddFormControl(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlFormControl type, long left, long top, long width, long height, CAObjHandle *returnValue);"

[Excel_ShapesAddOLEObject]
Class="Function"
Prototype="long Excel_ShapesAddOLEObject(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT classType, struct tagVARIANT filename, struct tagVARIANT link, struct tagVARIANT displayAsIcon, struct tagVARIANT iconFileName, struct tagVARIANT iconIndex, struct tagVARIANT iconLabel, struct tagVARIANT left, struct tagVARIANT top, struct tagVARIANT width, struct tagVARIANT height, CAObjHandle *returnValue);"

[Excel_ShapeRangeItem]
Class="Function"
Prototype="long Excel_ShapeRangeItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ShapeRange_Default]
Class="Function"
Prototype="long Excel_ShapeRange_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_ShapeRangeAlign]
Class="Function"
Prototype="long Excel_ShapeRangeAlign(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoAlignCmd alignCmd, enum ExcelEnum_MsoTriState relativeTo);"

[Excel_ShapeRangeApply]
Class="Function"
Prototype="long Excel_ShapeRangeApply(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRangeDelete]
Class="Function"
Prototype="long Excel_ShapeRangeDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRangeDistribute]
Class="Function"
Prototype="long Excel_ShapeRangeDistribute(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoDistributeCmd distributeCmd, enum ExcelEnum_MsoTriState relativeTo);"

[Excel_ShapeRangeDuplicate]
Class="Function"
Prototype="long Excel_ShapeRangeDuplicate(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeRangeFlip]
Class="Function"
Prototype="long Excel_ShapeRangeFlip(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoFlipCmd flipCmd);"

[Excel_ShapeRangeIncrementLeft]
Class="Function"
Prototype="long Excel_ShapeRangeIncrementLeft(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapeRangeIncrementRotation]
Class="Function"
Prototype="long Excel_ShapeRangeIncrementRotation(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapeRangeIncrementTop]
Class="Function"
Prototype="long Excel_ShapeRangeIncrementTop(CAObjHandle objectHandle, ERRORINFO *errorInfo, float increment);"

[Excel_ShapeRangeGroup]
Class="Function"
Prototype="long Excel_ShapeRangeGroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeRangePickUp]
Class="Function"
Prototype="long Excel_ShapeRangePickUp(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRangeRerouteConnections]
Class="Function"
Prototype="long Excel_ShapeRangeRerouteConnections(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRangeRegroup]
Class="Function"
Prototype="long Excel_ShapeRangeRegroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeRangeScaleHeight]
Class="Function"
Prototype="long Excel_ShapeRangeScaleHeight(CAObjHandle objectHandle, ERRORINFO *errorInfo, float factor, enum ExcelEnum_MsoTriState relativeToOriginalSize, struct tagVARIANT scale);"

[Excel_ShapeRangeScaleWidth]
Class="Function"
Prototype="long Excel_ShapeRangeScaleWidth(CAObjHandle objectHandle, ERRORINFO *errorInfo, float factor, enum ExcelEnum_MsoTriState relativeToOriginalSize, struct tagVARIANT scale);"

[Excel_ShapeRangeSelect]
Class="Function"
Prototype="long Excel_ShapeRangeSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT replace);"

[Excel_ShapeRangeSetShapesDefaultProps]
Class="Function"
Prototype="long Excel_ShapeRangeSetShapesDefaultProps(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ShapeRangeUngroup]
Class="Function"
Prototype="long Excel_ShapeRangeUngroup(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ShapeRangeZOrder]
Class="Function"
Prototype="long Excel_ShapeRangeZOrder(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoZOrderCmd ZOrderCmd);"

[Excel_GroupShapesItem]
Class="Function"
Prototype="long Excel_GroupShapesItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_GroupShapes_Default]
Class="Function"
Prototype="long Excel_GroupShapes_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_TextFrameCharacters]
Class="Function"
Prototype="long Excel_TextFrameCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_ConnectorFormatBeginConnect]
Class="Function"
Prototype="long Excel_ConnectorFormatBeginConnect(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle connectedShape, long connectionSite);"

[Excel_ConnectorFormatBeginDisconnect]
Class="Function"
Prototype="long Excel_ConnectorFormatBeginDisconnect(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ConnectorFormatEndConnect]
Class="Function"
Prototype="long Excel_ConnectorFormatEndConnect(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle connectedShape, long connectionSite);"

[Excel_ConnectorFormatEndDisconnect]
Class="Function"
Prototype="long Excel_ConnectorFormatEndDisconnect(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_FreeformBuilderAddNodes]
Class="Function"
Prototype="long Excel_FreeformBuilderAddNodes(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_MsoSegmentType segmentType, enum ExcelEnum_MsoEditingType editingType, float x1, float y1, struct tagVARIANT x2, struct tagVARIANT y2, struct tagVARIANT x3, struct tagVARIANT y3);"

[Excel_FreeformBuilderConvertToShape]
Class="Function"
Prototype="long Excel_FreeformBuilderConvertToShape(CAObjHandle objectHandle, ERRORINFO *errorInfo, CAObjHandle *returnValue);"

[Excel_ControlFormatAddItem]
Class="Function"
Prototype="long Excel_ControlFormatAddItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, const char *text, struct tagVARIANT index);"

[Excel_ControlFormatRemoveAllItems]
Class="Function"
Prototype="long Excel_ControlFormatRemoveAllItems(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_ControlFormatRemoveItem]
Class="Function"
Prototype="long Excel_ControlFormatRemoveItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, struct tagVARIANT count);"

[Excel_ControlFormatList]
Class="Function"
Prototype="long Excel_ControlFormatList(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, struct tagVARIANT *returnValue);"

[Excel_OLEFormatActivate]
Class="Function"
Prototype="long Excel_OLEFormatActivate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEFormatVerb]
Class="Function"
Prototype="long Excel_OLEFormatVerb(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT verb);"

[Excel_LinkFormatUpdate]
Class="Function"
Prototype="long Excel_LinkFormatUpdate(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PublishObjectsAdd]
Class="Function"
Prototype="long Excel_PublishObjectsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, enum ExcelEnum_XlSourceType sourceType, const char *filename, struct tagVARIANT sheet, struct tagVARIANT source, struct tagVARIANT htmlType, struct tagVARIANT divID, struct tagVARIANT title, CAObjHandle *returnValue);"

[Excel_PublishObjectsItem]
Class="Function"
Prototype="long Excel_PublishObjectsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PublishObjects_Default]
Class="Function"
Prototype="long Excel_PublishObjects_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PublishObjectsDelete]
Class="Function"
Prototype="long Excel_PublishObjectsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PublishObjectsPublish]
Class="Function"
Prototype="long Excel_PublishObjectsPublish(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_OLEDBErrorsItem]
Class="Function"
Prototype="long Excel_OLEDBErrorsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_OLEDBErrors_Default]
Class="Function"
Prototype="long Excel_OLEDBErrors_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_OLEDBErrors_NewEnum]
Class="Function"
Prototype="long Excel_OLEDBErrors_NewEnum(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct IUnknown **returnValue);"

[Excel_PhoneticsItem]
Class="Function"
Prototype="long Excel_PhoneticsItem(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_PhoneticsDelete]
Class="Function"
Prototype="long Excel_PhoneticsDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo);"

[Excel_PhoneticsAdd]
Class="Function"
Prototype="long Excel_PhoneticsAdd(CAObjHandle objectHandle, ERRORINFO *errorInfo, long start, long length, const char *text);"

[Excel_Phonetics_Default]
Class="Function"
Prototype="long Excel_Phonetics_Default(CAObjHandle objectHandle, ERRORINFO *errorInfo, long index, CAObjHandle *returnValue);"

[Excel_PivotLayoutColumnFields]
Class="Function"
Prototype="long Excel_PivotLayoutColumnFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutDataFields]
Class="Function"
Prototype="long Excel_PivotLayoutDataFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutPageFields]
Class="Function"
Prototype="long Excel_PivotLayoutPageFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutRowFields]
Class="Function"
Prototype="long Excel_PivotLayoutRowFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutHiddenFields]
Class="Function"
Prototype="long Excel_PivotLayoutHiddenFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutVisibleFields]
Class="Function"
Prototype="long Excel_PivotLayoutVisibleFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutPivotFields]
Class="Function"
Prototype="long Excel_PivotLayoutPivotFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT index, CAObjHandle *returnValue);"

[Excel_PivotLayoutAddFields]
Class="Function"
Prototype="long Excel_PivotLayoutAddFields(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT rowFields, struct tagVARIANT columnFields, struct tagVARIANT pageFields, struct tagVARIANT appendField);"

[Excel_DisplayUnitLabelSelect]
Class="Function"
Prototype="long Excel_DisplayUnitLabelSelect(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DisplayUnitLabelDelete]
Class="Function"
Prototype="long Excel_DisplayUnitLabelDelete(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT *returnValue);"

[Excel_DisplayUnitLabelCharacters]
Class="Function"
Prototype="long Excel_DisplayUnitLabelCharacters(CAObjHandle objectHandle, ERRORINFO *errorInfo, struct tagVARIANT start, struct tagVARIANT length, CAObjHandle *returnValue);"

[Excel_RefreshEventsRegOnBeforeRefresh]
Class="Function"
Prototype="long Excel_RefreshEventsRegOnBeforeRefresh(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_RefreshEventsRegOnAfterRefresh]
Class="Function"
Prototype="long Excel_RefreshEventsRegOnAfterRefresh(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnNewWorkbook]
Class="Function"
Prototype="long Excel_AppEventsRegOnNewWorkbook(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetSelectionChange]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetSelectionChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetBeforeDoubleClick]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetBeforeDoubleClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetBeforeRightClick]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetBeforeRightClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetActivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetDeactivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetCalculate]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetCalculate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetChange]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookOpen]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookOpen(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookActivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookDeactivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookBeforeClose]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookBeforeClose(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookBeforeSave]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookBeforeSave(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, short, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookBeforePrint]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookBeforePrint(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookNewSheet]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookNewSheet(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookAddinInstall]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookAddinInstall(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWorkbookAddinUninstall]
Class="Function"
Prototype="long Excel_AppEventsRegOnWorkbookAddinUninstall(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWindowResize]
Class="Function"
Prototype="long Excel_AppEventsRegOnWindowResize(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWindowActivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnWindowActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnWindowDeactivate]
Class="Function"
Prototype="long Excel_AppEventsRegOnWindowDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_AppEventsRegOnSheetFollowHyperlink]
Class="Function"
Prototype="long Excel_AppEventsRegOnSheetFollowHyperlink(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnActivate]
Class="Function"
Prototype="long Excel_ChartEventsRegOnActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnDeactivate]
Class="Function"
Prototype="long Excel_ChartEventsRegOnDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnResize]
Class="Function"
Prototype="long Excel_ChartEventsRegOnResize(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnMouseDown]
Class="Function"
Prototype="long Excel_ChartEventsRegOnMouseDown(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long, long, long), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnMouseUp]
Class="Function"
Prototype="long Excel_ChartEventsRegOnMouseUp(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long, long, long), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnMouseMove]
Class="Function"
Prototype="long Excel_ChartEventsRegOnMouseMove(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long, long, long), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnBeforeRightClick]
Class="Function"
Prototype="long Excel_ChartEventsRegOnBeforeRightClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnDragPlot]
Class="Function"
Prototype="long Excel_ChartEventsRegOnDragPlot(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnDragOver]
Class="Function"
Prototype="long Excel_ChartEventsRegOnDragOver(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnBeforeDoubleClick]
Class="Function"
Prototype="long Excel_ChartEventsRegOnBeforeDoubleClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long, long, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnSelect]
Class="Function"
Prototype="long Excel_ChartEventsRegOnSelect(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long, long), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnSeriesChange]
Class="Function"
Prototype="long Excel_ChartEventsRegOnSeriesChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, long, long), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_ChartEventsRegOnCalculate]
Class="Function"
Prototype="long Excel_ChartEventsRegOnCalculate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnSelectionChange]
Class="Function"
Prototype="long Excel_DocEventsRegOnSelectionChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnBeforeDoubleClick]
Class="Function"
Prototype="long Excel_DocEventsRegOnBeforeDoubleClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnBeforeRightClick]
Class="Function"
Prototype="long Excel_DocEventsRegOnBeforeRightClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnActivate]
Class="Function"
Prototype="long Excel_DocEventsRegOnActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnDeactivate]
Class="Function"
Prototype="long Excel_DocEventsRegOnDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnCalculate]
Class="Function"
Prototype="long Excel_DocEventsRegOnCalculate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnChange]
Class="Function"
Prototype="long Excel_DocEventsRegOnChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_DocEventsRegOnFollowHyperlink]
Class="Function"
Prototype="long Excel_DocEventsRegOnFollowHyperlink(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnOpen]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnOpen(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnActivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnDeactivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnBeforeClose]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnBeforeClose(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnBeforeSave]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnBeforeSave(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnBeforePrint]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnBeforePrint(CAObjHandle serverObject, long (*callbackFunction)(int, void *, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnNewSheet]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnNewSheet(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnAddinInstall]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnAddinInstall(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnAddinUninstall]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnAddinUninstall(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnWindowResize]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnWindowResize(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnWindowActivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnWindowActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnWindowDeactivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnWindowDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetSelectionChange]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetSelectionChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetBeforeDoubleClick]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetBeforeDoubleClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetBeforeRightClick]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetBeforeRightClick(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int, short *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetActivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetActivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetDeactivate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetDeactivate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetCalculate]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetCalculate(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetChange]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetChange(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_WorkbkEventsRegOnSheetFollowHyperlink]
Class="Function"
Prototype="long Excel_WorkbkEventsRegOnSheetFollowHyperlink(CAObjHandle serverObject, long (*callbackFunction)(int, void *, int, int), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_OLEObjectEventsRegOnGotFocus]
Class="Function"
Prototype="long Excel_OLEObjectEventsRegOnGotFocus(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

[Excel_OLEObjectEventsRegOnLostFocus]
Class="Function"
Prototype="long Excel_OLEObjectEventsRegOnLostFocus(CAObjHandle serverObject, long (*callbackFunction)(int, void *), void *callbackData, int enableCallbacks, int *callbackId);"

